{"version":3,"file":"metaphasejs.es5.js","sources":["../src/orm/yago.logger.ts","../src/orm/database.ts","../src/orm/query.builder.ts","../src/orm/base.ts","../src/orm/exceptions.ts","../src/orm/model.ts","../src/orm/column.ts","../src/orm/collection.ts","../node_modules/reflect-metadata/Reflect.ts","../src/orm/decorators.ts","../src/metaphasejs.ts"],"sourcesContent":["// Debugger in the browser console can be controlled through a url query parameter.\r\n// For example: http://localhost:3000?logger=true\r\n\r\n/**\r\n * Controls default logger behaviour.\r\n * Pass a 'false' value to avoid logger. This is the desired behaviour for production.\r\n * @type {string}\r\n */\r\nconst DEFAULT_LOG_STATE: string = 'false';\r\n\r\n/**\r\n * Gets url query parameter form URL\r\n * @param {string} paramName\r\n * @returns {string}\r\n */\r\nexport const getUrlParameter = (paramName: string) => {\r\n  paramName = paramName.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n  const regex = new RegExp('[\\\\?&]' + paramName + '=([^&#]*)');\r\n  const results = regex.exec(location.search);\r\n  return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\r\n};\r\n\r\n/**\r\n * Update query string parameter\r\n * @param {string} uri\r\n * @param {string} key\r\n * @param {string} value\r\n * @return {string}\r\n */\r\nexport function updateQueryStringParameter(uri: string, key: string, value: string) {\r\n  const re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\r\n  const separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\r\n  if (uri.match(re)) {\r\n    return uri.replace(re, '$1' + key + \"=\" + value + '$2');\r\n  }\r\n  else {\r\n    return uri + separator + key + \"=\" + value;\r\n  }\r\n}\r\n\r\n// Variable that holds the looger state\r\nlet urlLogParam = getUrlParameter('logger');\r\nurlLogParam = urlLogParam || DEFAULT_LOG_STATE;\r\n\r\n/**\r\n * Disables console output messages (except error).\r\n * Used for production mode\r\n */\r\nexport function disableConsole(): void {\r\n  // console = console || {};\r\n  console.log = () => {};\r\n  console.table = () => {};\r\n  console.warn = () => {};\r\n}\r\n\r\nif (urlLogParam === 'false') {\r\n  disableConsole();\r\n}\r\n\r\n/**\r\n * Logs message formats: foreground color, background color\r\n * CSS syntax is used to format messages\r\n * @type {Object}\r\n */\r\nexport const LOG_FORMAT = {\r\n  BLUE: 'background: ghostwhite; color: cornflowerblue; font-size: 12px; font-weight: bold',\r\n  ORANGE: 'color: orange',\r\n  BG_YELLOW: 'background-color: yellow'\r\n};\r\n\r\n/**\r\n * Logs sql query strings and query results, appling two formats:\r\n * Input (query): blue colors\r\n * Output (result): yellow colors\r\n * @param {string} msg\r\n * @param {\"query\" | \"result\" | string} format\r\n */\r\nexport function logQuery(msg: string, format: 'query' | 'result' | string): void {\r\n  if (format === 'query') {\r\n    const format = LOG_FORMAT.BLUE;\r\n    console.log(`%c${msg}`, format);\r\n  } else\r\n  if (format === 'result') {\r\n    const format = LOG_FORMAT.ORANGE;\r\n    console.log(`%câœ… ${msg}`, format);\r\n  } else {\r\n    console.log(`%c${msg}`, format)\r\n  }\r\n}\r\n\r\n/**\r\n * General Fn to apply format to a log message\r\n * @param {string} msg\r\n * @param {string} format\r\n */\r\nexport function log(msg: string, format: string): void {\r\n  console.log(`%c${msg}`, format);\r\n}\r\n\r\n/* Using a global variable: ********************************** */\r\n\r\n// interface window {\r\n//   DEBUG: boolean;\r\n// }\r\n//\r\n// export const setDebugLevel = (flag: boolean = true): void => {\r\n//   (window as any).DEBUG = flag;\r\n// };\r\n\r\n/* Get query string parameters for modern browsers. Doesnt work with Jest. A shim is needed */\r\n// const urlParams = new URLSearchParams(window.location.search);\r\n// let urlLogParam = urlParams.get('log');\r\n","//todo: usar whatg-fetch en lugar de fetch para compatibilidad navegador (?)\r\n\r\nconst sql = require('sql.js');\r\nimport {QueryBuilder} from 'knex';\r\nimport {logQuery} from './yago.logger';\r\nconst FileSaver = require('file-saver');\r\n\r\ndeclare const SQL: any;\r\n\r\n//todo: falta completar definicion de tipos para clase Statement y documentar cada metodo\r\n/** **************************************************************************************************************\r\n * db.js API\r\n * Documentation:\r\n * http://kripken.github.io/sql.js/documentation/#http://kripken.github.io/sql.js/documentation/class/Database.html\r\n **************************************************************************************************************** */\r\nexport interface db {\r\n\r\n  /**\r\n   * Open a new database either by creating a new one or opening an existing one,\r\n   * stored in the byte array passed in first argument\r\n   * @param {number[]} data\r\n   */\r\n  constructor(data: number[]): void;\r\n\r\n  /**\r\n   * Set DB created from external file\r\n   * @param {db} database\r\n   */\r\n  setDatabase(database: db): void;\r\n\r\n  /**\r\n   * Runs a database query that can be created by the query builder or by a sql query string.\r\n   * It does not return a list of results. It returns a \"db\" database object for fn chaining\r\n   * It wraps db.run()\r\n   * @param {Object | string} query\r\n   */\r\n  runQuery(query: QueryBuilder | string): any;\r\n\r\n  /**\r\n   * Execute a query against database and returns an array of objects\r\n   * It wraps db.exec()\r\n   * @param {QueryBuilder} query object\r\n   * @returns {Object[]} List of models\r\n   */\r\n  execQuery(query: QueryBuilder | string): Object[];\r\n\r\n  /**\r\n   * Get the results from a query and transform them into a list of POJOs\r\n   * @param statement Prepared SQL statement\r\n   * @returns {Object[]}\r\n   */\r\n  getResults(statement: any): Object[];\r\n\r\n  /**\r\n   * Check whether a table exists in the database\r\n   * @param {string} tableName\r\n   * @returns {boolean}\r\n   */\r\n  hasTable(tableName: string): boolean;\r\n\r\n  /**\r\n   * Check databse integrity (for posible errors and corruption)\r\n   * @returns {Object[]} with integrity info\r\n   */\r\n  integrityCheck(): Object[];\r\n\r\n  /**\r\n   * Get DDL (Data Definition Language) queries\r\n   * Useful for debugging purposes\r\n   * @return {Object[]}\r\n   */\r\n  getSchema(): Object[];\r\n\r\n  /**\r\n   * Get id of last record inserted in database\r\n   * @return {number}\r\n   */\r\n  getIdLastRecordInserted(): number;\r\n\r\n  run(sqlQuery: string, params?: object | any[]): db;\r\n  exec(sqlQuery: string): Array<{columns: string[], values: any[]}>;\r\n  prepare(sqlQuery: string, params?: object | any[]): Object;\r\n  each(sqlQuery: string, callback: Function, done: Function, params?: object | any[]): db;\r\n  export(): Uint8Array;\r\n  close(): void;\r\n  getRowsModified(): number;\r\n  create_function(name: string, fn: Function): void;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Database instance\r\n * @type {SQL} Global variable created by 'sql.js'\r\n */\r\nexport let db = new sql.Database();\r\n\r\ndb.__proto__.setDatabase = (database: any) => {\r\n  db = database;\r\n};\r\n\r\ndb.__proto__.runQuery = (query: QueryBuilder | string): any => {\r\n  const queryString = query.toString();\r\n  logQuery(queryString, 'query');\r\n  return db.run(queryString);\r\n};\r\n\r\ndb.__proto__.execQuery = (query: QueryBuilder | string, useLogger: boolean = true): Object[] => {\r\n  useLogger && logQuery(query.toString(), 'query');\r\n  return db.getResults( db.prepare(query.toString()) );\r\n};\r\n\r\ndb.__proto__.getResults = (statement: any): Object[] => {\r\n  let result: any[] = [];\r\n  while (statement.step()){\r\n    result.push(statement.getAsObject());\r\n  }\r\n  statement.free();\r\n  return result;\r\n};\r\n\r\ndb.__proto__.hasTable = (tableName: string): boolean => {\r\n  const result = db.exec( `SELECT name FROM sqlite_master WHERE type='table' AND name='${tableName}'` );\r\n  return result && result.length > 0\r\n};\r\n\r\ndb.__proto__.integrityCheck = (): Object[] => {\r\n  return db.execQuery('PRAGMA integrity_check', false);\r\n};\r\n\r\ndb.__proto__.getSchema = () => {\r\n  return db.execQuery('SELECT \"name\", \"sql\" FROM \"sqlite_master\" WHERE type=\"table\"');\r\n};\r\n\r\ndb.__proto__.getIdLastRecordInserted = (): number => {\r\n  const result = db.execQuery('SELECT last_insert_rowid()', false);\r\n  return result && result[0]['last_insert_rowid()'];\r\n};\r\n\r\nexport const loadDbFromFile = (fileNamePath: string, actionFn: Function): void => {\r\n  fetch(fileNamePath)\r\n    .then((response: any) => {\r\n      if (response) {\r\n        return response.arrayBuffer();\r\n      }\r\n    }).then((arrayBuffer: any) => {\r\n    if (arrayBuffer) {\r\n      const dbFile = new Uint8Array(arrayBuffer);\r\n      const dbInstance = new SQL.Database(dbFile);\r\n      db.setDatabase(dbInstance);\r\n      try {\r\n        db.integrityCheck();\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert(`Error loading db file: \"${fileNamePath}\"`);\r\n      }\r\n      console.clear();\r\n      const logFormat = 'background: cornflowerblue; color: white; font-weight: ';\r\n      console.log(`%c Database loaded from file \"${fileNamePath}\" `, logFormat);\r\n      db.execQuery('PRAGMA foreign_keys=ON;');\r\n      actionFn();\r\n    }\r\n  })\r\n  .catch((error: Error) => {\r\n    console.error(error);\r\n    alert('Error loading db file');\r\n  })\r\n};\r\n\r\nexport const saveDbToFile = (fileNamePath: string) => {\r\n  try {\r\n    const isFileSaverSupported = !!new Blob;\r\n    const uint8Array = db.export();\r\n    const buffer = new Buffer(uint8Array);\r\n    const file = new File([buffer], fileNamePath, {type: 'application/octet-stream'});\r\n    FileSaver.saveAs(file);\r\n  } catch (exception) {\r\n    alert('Save file to disk not supported by browser');\r\n    console.error(exception);\r\n  }\r\n  db.execQuery('PRAGMA foreign_keys=ON;');\r\n};\r\n\r\nconsole.clear();\r\n\r\n","const knex = require('knex');\r\nimport {db} from \"./database\";\r\n\r\n\r\nlet queryBuilder: any;\r\n\r\nif (process.env.NODE_ENV !== 'test') {\r\n  /**\r\n   * Query-Builder: creates sql query strings using functions\r\n   * @type {Knex}\r\n   */\r\n  queryBuilder = knex({\r\n    client: 'sqlite',\r\n    connection: {filename: ':memory:'},\r\n    useNullAsDefault: true,\r\n    database : 'metaphase_db'\r\n  });\r\n}\r\n\r\nif (process.env.NODE_ENV === 'test') {\r\n  const mockKnex = require('mock-knex');\r\n  /**\r\n   * Mocked query-builder for tests\r\n   * @type {Knex}\r\n   */\r\n  queryBuilder = knex({\r\n    client: 'sqlite',\r\n    debug: false,\r\n    useNullAsDefault: true,\r\n    database: 'test_db'\r\n  });\r\n  mockKnex.mock(queryBuilder);\r\n}\r\n\r\n//todo: testar la funcion run() y getOne()\r\n//todo: emitir un evento personalizado para saber cuando se ha ejecutado una consulta\r\n//todo: renombrar getOne() a getFirst()\r\n\r\n/**\r\n * Execute database query using query-builder\r\n * Do not use arrow function because \"this\" type is incorrectly infered by typescript\r\n * @return {Object[]} list with query results\r\n */\r\nqueryBuilder().__proto__.run = function() {\r\n  return db.execQuery(this);\r\n};\r\n\r\n/**\r\n * Execute database query using query-builder and return only first row\r\n * @return {Object} query result\r\n */\r\nqueryBuilder().__proto__.getOne = function() {\r\n  return db.execQuery(this)[0];\r\n};\r\n\r\nexport {queryBuilder as query};\r\n","import {db} from \"./database\";\r\nimport {Model} from \"./model\";\r\nimport {query} from \"./query.builder\";\r\nimport {logQuery} from \"./yago.logger\";\r\n\r\n\r\nexport abstract class Base {\r\n\r\n  protected model: any;\r\n\r\n  public tableName(): string {\r\n    let name;\r\n    if(this.model) {\r\n      name = this.model.name;\r\n    } else {\r\n      name = this.constructor.name;\r\n    }\r\n    return name.toLowerCase() + 's';\r\n  }\r\n\r\n  protected insert(model?: any): number | string {\r\n    model = model || this;\r\n    query.insert(model).into(this.tableName()).run();\r\n    model.id = db.getIdLastRecordInserted();\r\n    return model.id;\r\n  }\r\n\r\n  protected update(model?: any): number | string {\r\n    query.table(this.tableName()).update(model).where('id', model.id).run();\r\n    return model.id;\r\n  }\r\n\r\n  public save(model?: any): number | string {\r\n    model = model || this;\r\n    let idModelSaved: number | string;\r\n    if (model.isSaved()) {\r\n      idModelSaved = this.update(model);\r\n    } else {\r\n      idModelSaved = this.insert(model);\r\n    }\r\n    (idModelSaved > 0) && logQuery(`Saved ${model.constructor.name} with id: ${idModelSaved}`, 'result');\r\n    return idModelSaved;\r\n  }\r\n\r\n  public remove(model?: any): number {\r\n    model = model || this;\r\n    const deleteQuery = `delete from ${this.tableName()} where id=${model.id}`;\r\n    db.run(deleteQuery);\r\n    logQuery(deleteQuery, 'query');\r\n    logQuery(`Deleted ${this.constructor.name} with id: ${model.id}`, 'result');\r\n    return model.id;\r\n  }\r\n\r\n}\r\n","import {Model} from \"./model\";\r\n\r\nexport class NotSavedModelError extends Error {\r\n\r\n  constructor(public model: Model, public relatedModel: Model) {\r\n    super();\r\n    let relatedModelName: string;\r\n    if (relatedModel.constructor.name === \"Function\") {\r\n      relatedModelName = relatedModel.prototype.constructor.name;\r\n    } else {\r\n      relatedModelName = relatedModel.constructor.name;\r\n    }\r\n    const msg = `(${model.constructor.name}) = ${JSON.stringify(model)}` +\r\n      ` must be saved to establish a relation with (${relatedModelName})`;\r\n    throw new Error(msg);\r\n  }\r\n}\r\n\r\nexport class InvalidPropTypeError extends Error {\r\n  constructor(jsType?: string) {\r\n    super();\r\n    const msg = `Invalid model property type: \"${jsType}\". Allowed values: [\"string, number\"]`;\r\n    throw new Error(msg);\r\n  }\r\n}\r\n\r\nexport class InvalidColumnData extends Error {\r\n  constructor(columnData: string | undefined) {\r\n    super();\r\n    const msg = `Invalid column data value: \"${columnData}\"`;\r\n    throw new Error(msg);\r\n  }\r\n}","import {Base} from \"./base\";\r\nimport {query} from \"./query.builder\";\r\nimport {NotSavedModelError} from \"./exceptions\";\r\n\r\n\r\nexport abstract class Model extends Base {\r\n\r\n  [otherProps: string]: any;\r\n\r\n  constructor(props?: Model | {}) {\r\n    super();\r\n    Object.assign(this, props);\r\n  }\r\n\r\n  /**\r\n   * Factory for model instance creation\r\n   * @param {Object} pojo (plain old javascript object)\r\n   * @param {any} modelClass\r\n   * @returns {Model}\r\n   */\r\n  public static create(pojo: Object, modelClass: any): Model {\r\n    return new modelClass(pojo);\r\n  }\r\n\r\n  public isSaved(): boolean {\r\n    return this.id !== undefined;\r\n  }\r\n\r\n  private getForeignKeyColumnName(): string {\r\n    return this.constructor.name.toLowerCase() + '_id';\r\n  }\r\n\r\n  //todo: parametro para opcion escribir el modelo en la tabla de la bd {save: true}\r\n  public belongsTo(model: Model): Model {\r\n    if ( !model.isSaved ) {\r\n      throw new Error('Invalid model instance: ' + model);\r\n    }\r\n    if( !model.isSaved() ) {\r\n      throw new NotSavedModelError(model, this);\r\n    }\r\n    const foreignColumnName = model.getForeignKeyColumnName();\r\n    this[foreignColumnName] = model.id;\r\n    return this;\r\n  }\r\n\r\n  //todo: esto corresponde a la direccion inversa de una relacion. Igual se podria implementar como un decorator\r\n  //igual que getChildren(). el decorador tendria que crear la fn hasMany() y getParent() o getChildren()\r\n  //dependiendo de lado de la relacion (consultar typeorm para ver como lo hace)\r\n  public getParent(model: any & Model): Model[] {\r\n    if( !this.isSaved() ) {\r\n      throw new NotSavedModelError(this, model);\r\n    }\r\n    const relatedTable = model.prototype.tableName();\r\n    const fkColumnName = model.prototype.getForeignKeyColumnName();\r\n    const idColValue = this[fkColumnName];\r\n    const relatedModels: Model[] = query(relatedTable).where('id', idColValue).run();\r\n    return relatedModels.map( obj => Model.create(obj, model) );\r\n  }\r\n\r\n  //todo: intentar crear dinamicamente esta funcion como \"posts()\" por ejemplo\r\n  /**\r\n   * Get first level related children models\r\n   * @param model\r\n   * @returns {Model[]}\r\n   */\r\n  public getChildren(model: any & Model): Model[] {\r\n    if( !this.isSaved() ) {\r\n      throw new NotSavedModelError(this, model);\r\n    }\r\n    const childTable = model.prototype.tableName();\r\n    const fkColumnChildTable = this.getForeignKeyColumnName();\r\n    try {\r\n      const relatedModels: Model[] = query(childTable).where(fkColumnChildTable, this.id).run();\r\n      return relatedModels.map( obj => Model.create(obj, model) );\r\n    } catch(exception) {\r\n      console.error(`Model ${JSON.stringify(this)} has no children of type \"${model.name}\"`);\r\n      console.error(exception);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get recursively all descendant models from this model\r\n   */\r\n  public getChildrenAll(): void {\r\n    if (this.hasMany) {\r\n      const childClasses = this.hasMany();\r\n      for (let i = 0; i < childClasses.length; i++ ) {\r\n        const childModels = this.getChildren(childClasses[i]);\r\n        const newPropName = childClasses[i].prototype.tableName();\r\n        this[newPropName] = [];\r\n        for (let j = 0; j < childModels.length; j++ ) {\r\n          this[newPropName].push(childModels[j]);\r\n          childModels[j].getChildrenAll(); // recursive call\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //todo: testar esta fn\r\n  /**\r\n   * Makes related models properties not enumerable\r\n   * Use: if a model is fetched with all related (or children) models\r\n   * when this model is saved an error is thrown due to properties containing related models\r\n   * are not original model properties\r\n   * This function can be used to \"hide\" (not enumerate) these props and save the model\r\n   * @param {Model} model\r\n   * returns {Model}\r\n   */\r\n  public static omitChildrenProps(model: any): Model {\r\n    model.hasChildren() && model.hasMany().forEach((relatedModel: Model) => {\r\n      try {\r\n        Object.defineProperty(model, relatedModel.prototype.tableName(), {enumerable: false});\r\n      } catch(exception) {\r\n        console.error(exception);\r\n        alert(exception)\r\n      }\r\n    });\r\n    return model;\r\n  }\r\n\r\n  public hasChildren(): boolean {\r\n    return this.hasMany !== undefined;\r\n  }\r\n\r\n\r\n  // private isChildModel(): boolean {\r\n  //   const columns: Column[] = this.__proto__.constructor.columns;\r\n  //   let result = false;\r\n  //   for (let i = 0; i < columns.length; i++) {\r\n  //     if ( columns[i].isForeignKey() ) {\r\n  //       result = true;\r\n  //       break;\r\n  //     }\r\n  //   }\r\n  //   return result;\r\n  // }\r\n  //\r\n\r\n//   public existsTableInDB(): boolean {\r\n//     const rows = db.exec( query.schema.hasTable(this.tableName()).toString() );\r\n//     return rows && rows.length > 0\r\n//   }\r\n\r\n  // public existsInTable() {\r\n  //   return db.execQuery(`select * from ${this.tableName()} where id=${this.id}`);\r\n  // }\r\n\r\n  // private hasTableColumn(model: Model, columnName: string): boolean {\r\n  //   const columns = model.columns;\r\n  //   const columnNames: string[] = columns.map((column: Column) => {\r\n  //     return column.name;\r\n  //   });\r\n  //   return columnNames.indexOf(columnName) > -1;\r\n  // }\r\n\r\n\r\n\r\n  // public setRelated(model: Model): number | string {\r\n  //   let foreignId: number | string;\r\n  //   try {\r\n  //     if(this.id) {\r\n  //       foreignId = this.id;\r\n  //     } else {\r\n  //       foreignId = this.save();\r\n  //     }\r\n  //     const foreignColumnName = this.getForeignKeyColumnName();\r\n  //     model[foreignColumnName] = foreignId;\r\n  //     return model.save();\r\n  //   } catch(error) {\r\n  //     console.log(error);\r\n  //     return -1;\r\n  //   }\r\n  // }\r\n\r\n}\r\n\r\n\r\n","//todo: funcionamiento para tipo de columna boolean. Poder usar \"true/false\"\r\n//todo: poder obtener una columna de la tabla de un modelo y hacerla nullable (para los casos en que\r\n// se quiera hacer la columna fk nullable\r\n//todo: hacer configurable politica de acciones: cascade, set null, etc.\r\n\r\nimport { DBtype } from './types';\r\nimport { TableBuilder } from 'knex';\r\nimport { InvalidColumnData } from './exceptions';\r\n\r\nexport const enum ColumnAction {\r\n  Cascade = 'cascade',\r\n  SetNull = 'set null',\r\n  SetDefault = 'set default',\r\n  Restrict = 'restrict',\r\n  NoAction = 'no action'\r\n}\r\n\r\nexport interface IColumn {\r\n  name?: string;\r\n  dbType?: DBtype | any;\r\n  size?: number;\r\n  foreignKey?: boolean;\r\n  relatedTable?: string;\r\n  unique?: boolean;\r\n  defaultValue?: any;\r\n  notNullable?: boolean;\r\n  index?: boolean;\r\n}\r\n\r\nexport class Column implements IColumn {\r\n  name?: string;\r\n  dbType?: DBtype;\r\n  size?: number;\r\n  foreignKey?: boolean;\r\n  relatedTable?: string;\r\n  unique?: boolean;\r\n  defaultValue?: any;\r\n  notNullable?: boolean;\r\n  index?: boolean;\r\n\r\n  //todo: sqlite no soporta default values (solo null) eliminar la opcion \"defaultValue\"\r\n  //`sqlite` does not support inserting default values. Specify values explicitly or use the `useNullAsDefault`\r\n  // config flag. (see docs http://knexjs.org/#Builder-insert).\r\n\r\n  constructor({\r\n    name,\r\n    size,\r\n    dbType,\r\n    foreignKey,\r\n    relatedTable,\r\n    unique,\r\n    defaultValue,\r\n    notNullable,\r\n    index\r\n  }: IColumn) {\r\n    this.name = name;\r\n    this.dbType = dbType;\r\n    this.foreignKey = foreignKey;\r\n    this.relatedTable = relatedTable;\r\n    this.unique = unique;\r\n    this.defaultValue = defaultValue;\r\n    this.size = size;\r\n    this.notNullable = notNullable;\r\n    this.index = index;\r\n  }\r\n\r\n  /**\r\n   * Creates foreign key relation between two columns in two tables\r\n   * Column 1: primary key column ('id')\r\n   * Column 2: foreign key column (<modelName>_id)\r\n   * Table 1: table\r\n   * Table 2: this.relatedTable\r\n   * Note: ColumnAction = 'Cascade' by default. Not configurable by now\r\n   * @param {knex.TableBuilder} table\r\n   */\r\n  public createColumnsRelation(table: TableBuilder) {\r\n    if (!this.name) {\r\n      throw new InvalidColumnData(this.name);\r\n    }\r\n\r\n    if (!this.relatedTable) {\r\n      throw new InvalidColumnData(this.relatedTable);\r\n    }\r\n\r\n    table\r\n      .foreign(this.name)\r\n      .references('id')\r\n      .inTable(this.relatedTable)\r\n      .onDelete(ColumnAction.Cascade)\r\n      .onUpdate(ColumnAction.Cascade)\r\n  }\r\n\r\n  /**\r\n   * Create table columns based in column properties\r\n   * @param {Knex.TableBuilder} table\r\n   */\r\n  public createColumn(table: TableBuilder | any) {\r\n    let newColumn;\r\n    const colType = this.dbType;\r\n    const colName = this.name;\r\n    const colSize = this.size;\r\n\r\n    this.size && console.warn('Size option exists for compatibility. It has no real effect');\r\n\r\n    if (!colType || !colName) {\r\n      throw new InvalidColumnData(colType || colName);\r\n    }\r\n    if (this.foreignKey) {\r\n      this.createColumnsRelation(table);\r\n    }\r\n    if (this.notNullable) {\r\n      newColumn = table[colType](colName).notNullable();\r\n    }\r\n    if (this.unique) {\r\n      newColumn = Column.addUniqueConstraint(newColumn, table, colType, colName);\r\n    }\r\n    if (this.index) {\r\n      newColumn = Column.addIndex(newColumn, table, colType, colName);\r\n    }\r\n    return newColumn || table[colType](colName, colSize);\r\n  }\r\n\r\n  private static addUniqueConstraint(\r\n    newColumn: any,\r\n    tableBuilder: TableBuilder | any,\r\n    colType: DBtype,\r\n    colName: string\r\n  ): TableBuilder {\r\n    if (newColumn) {\r\n      return newColumn.unique();\r\n    } else {\r\n      return tableBuilder[colType](colName).unique();\r\n    }\r\n  }\r\n\r\n  private static addIndex(\r\n    newColumn: any,\r\n    tableBuilder: TableBuilder | any,\r\n    colType: DBtype,\r\n    colName: string\r\n  ): TableBuilder {\r\n    if (newColumn) {\r\n      return newColumn.index();\r\n    } else {\r\n      return tableBuilder[colType](colName).index();\r\n    }\r\n  }\r\n\r\n  public isForeignKey(): boolean {\r\n    return Boolean(this.foreignKey);\r\n  }\r\n}\r\n","//todo: quitar el plural de las tablas = tableName();\r\n//todo: hacer fn para paginacion. params: limit (rows per page), offset: (num. pag)\r\n//getAllPaginated(pagNum, recordNum)\r\n//todo: probar en edge y explorer\r\n//todo: hacer mutators transaccionales o averiguar si por defecto sqlite hace las operaciones transaccionales\r\n//todo: no usar cadena literal para nombre de columna 'id'\r\n//todo: faltan relaciones \"one to one\" y \"many to many\"\r\n//todo: documentar funciones\r\n//todo: fn borrar tabla\r\n//todo: implementar logger usando decorators\r\nimport {db} from \"./database\";\r\nimport {query} from \"./query.builder\";\r\nimport {Column} from \"./column\";\r\nimport {Base} from \"./base\";\r\nimport {Model} from \"./model\";\r\nimport {TableBuilder} from \"knex\";\r\nimport {DBtype} from \"./types\";\r\n\r\n\r\n/**\r\n * Manages a collection of models (rows in a db table)\r\n * It follows Repository pattern\r\n */\r\nexport class Collection extends Base {\r\n\r\n  constructor(protected model: any) {\r\n    super();\r\n    if (this.hasRelations()) {\r\n      this.createRelations();\r\n    }\r\n    this.createTable(this.tableName(), model.columns);\r\n  }\r\n\r\n  private createTable(tableName: string, columns: Column[]): void {\r\n    const createTableQuery = query.schema.raw('PRAGMA foreign_keys=ON')\r\n      .dropTableIfExists(tableName).createTable(\r\n      tableName, (tableBuilder: TableBuilder) => {\r\n        this.createColumns(columns, tableBuilder)\r\n      });\r\n    db.runQuery(createTableQuery);\r\n  }\r\n\r\n  //todo: hacer static\r\n  private createColumns(columns: Column[], tableBuilder: TableBuilder): void {\r\n    tableBuilder.increments('id');\r\n    for (let i in columns) {\r\n      columns[i].createColumn(tableBuilder);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Given an array of pojos it returns an array of model instances\r\n   * @param {Object[]} pojos (Plain Old Javascript Object)\r\n   * @returns {Object[]}\r\n   */\r\n  public createModelInstances(pojos: Object[]): Model[] {\r\n    for (let i = 0; i < pojos.length; i++) {\r\n      pojos[i] = Model.create(pojos[i], this.model);\r\n    }\r\n    return pojos as Model[];\r\n  }\r\n\r\n  public getAll( load: {children: boolean} = {children: false} ): Model[] {\r\n    const result = db.execQuery(`select * from ${this.tableName()}`);\r\n    const models: Model[] = this.createModelInstances(result);\r\n    console.table && console.table(result);\r\n    if (load.children) {\r\n      models.forEach( (model: Model) => model.getChildrenAll() );\r\n      return models;\r\n    } else {\r\n      return this.createModelInstances(result);\r\n    }\r\n  }\r\n\r\n  public getById( id: string | number, load: {children: boolean} = {children: false} ): Model {\r\n    const result = db.execQuery(`select * from ${this.tableName()} where id=${id}`)[0];\r\n    const model = new this.model(result);\r\n    console.log(model);\r\n    if (load.children) {\r\n      model.getChildrenAll();\r\n    }\r\n    return model;\r\n  }\r\n\r\n  public getByFilter(filter: Object,\r\n                     columns: string[]=[],\r\n                     load: {children: boolean} = {children: false} ): Model[] {\r\n\r\n    const result = query.select(columns).from(this.tableName()).where(filter).run();\r\n    console.table && console.table(result);\r\n    if (load.children) {\r\n      const models: Model[] = this.createModelInstances(result);\r\n      models.forEach( (model: Model) => model.getChildrenAll() );\r\n      return models;\r\n    } else {\r\n      return this.createModelInstances(result);\r\n    }\r\n  }\r\n\r\n  public getByOperator(termA: any,\r\n                       operator: string,\r\n                       termB: any,\r\n                       columns: string[] = [],\r\n                       load: {children: boolean} = {children: false}): Model[] {\r\n\r\n    const result = query.select(columns).from(this.tableName()).where(termA, operator, termB).run();\r\n    console.table && console.table(result);\r\n    if (load.children) {\r\n      const models: Model[] = this.createModelInstances(result);\r\n      models.forEach( (model: Model) => model.getChildrenAll() );\r\n      return models;\r\n    } else {\r\n      return this.createModelInstances(result);\r\n    }\r\n  }\r\n\r\n  private hasRelations(): boolean {\r\n    return this.model.prototype.hasMany\r\n  }\r\n\r\n  private createColumnRelation(index: number): void {\r\n    const model = this.model;\r\n    const relatedModel = model.prototype.hasMany()[index];\r\n    const newColumnRelation = new Column({\r\n      name: model.name.toLowerCase() + '_id',\r\n      dbType: DBtype.INTEGER,\r\n      foreignKey: true,\r\n      relatedTable: model.name.toLowerCase() + 's',\r\n      notNullable: true\r\n    });\r\n    const logFormat = 'color: grey; border-color: lightgrey; border-style: solid; border-width: 1px; ' +\r\n      'border-radius: 2px; padding: 2px; background-color: #f0f0f5';\r\n    console.log(`%c âš¿ Foreign-key column created in table ${relatedModel.prototype.tableName()}â†´ `, logFormat);\r\n    console.log(newColumnRelation);\r\n    const relatedModelColumns = relatedModel.prototype.constructor.columns;\r\n    relatedModelColumns.push(newColumnRelation);\r\n  }\r\n\r\n  private createRelations(): void {\r\n    const relationsList: Model[] = this.model.prototype.hasMany();\r\n    for(let index = 0; index < relationsList.length; index++) {\r\n      this.createColumnRelation(index);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get table structure and metadata for a model\r\n   * @param modelClass\r\n   * @returns {Object[]} Column metadata\r\n   */\r\n  public static getTableSchema(modelClass: any): Object[] {\r\n    return db.execQuery( `PRAGMA table_info(${modelClass.prototype.tableName()})` );\r\n  }\r\n\r\n  /**\r\n   * Get Knex query-builder for this collection/table\r\n   * @returns {any}\r\n   */\r\n  public query(): any {\r\n    return query(this.tableName());\r\n  }\r\n\r\n  /**\r\n   * Returns table schema with column metadata\r\n   * @param {string} tableName\r\n   * @param {string} columnName\r\n   * @returns {boolean}\r\n   */\r\n  public static hasColumn(tableName: string, columnName: string): boolean {\r\n    const results = db.exec(`SELECT COUNT(*) AS MATCHED_COLUMNS \r\n      FROM pragma_table_info('${tableName}') WHERE name='${columnName}'`);\r\n    return results[0].values[0][0] > 0;\r\n  }\r\n\r\n  /**\r\n   * For posible future use\r\n   * Deletes the table corresponding to the collection\r\n   * @param {\"string\"} tableName\r\n   */\r\n  public static deleteTable(tableName: string): void {\r\n    db.runQuery( query.schema.dropTableIfExists(tableName) );\r\n  }\r\n\r\n}",{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\yagol\\Documents\\projects\\metaphasejs\\node_modules\\reflect-metadata\\Reflect.ts"},"import 'reflect-metadata'\r\nimport { Column } from './column'\r\nimport { DBtype } from './types'\r\nimport { InvalidPropTypeError } from './exceptions'\r\n\r\n//todo: (revisar) usando solo como tipo DBtype no compila usando el decorador @columna({dbType: DBtype.TEXT)\r\n//Se une al tipo DBtype el tipo any como solucion temporal\r\n\r\nexport function column(colData?: {dbType?: DBtype | any, size?: number, unique?: boolean, notNullable?: boolean, index?: boolean}) {\r\n  return function(target: any, propName: string) {\r\n    let dbType: DBtype;\r\n    const propType = Reflect.getMetadata('design:type', target, propName);\r\n\r\n    target.constructor.columns = target.constructor.columns || [];\r\n\r\n    //todo: de la misma forma que se aÃ±ade una propiedad \"columns\" al constructor del modelo\r\n    //se podria aÃ±adir una funcion \"hasMany()\" usando un decorator para definir relaciones entre modelos\r\n    //Por ejemplo @hasMany()Post podria generar target.constructor.hasMany([Post])\r\n\r\n    if (propType) {\r\n      dbType = getDBTypeFromPropType(propType.name);\r\n    } else {\r\n      throw new InvalidPropTypeError(propType);\r\n    }\r\n\r\n    target.constructor.columns.push(\r\n      new Column({\r\n        name: propName,\r\n        dbType: (colData && colData.dbType) || dbType,\r\n        size: colData && colData.size,\r\n        unique: colData && colData.unique,\r\n        notNullable: colData && colData.notNullable,\r\n        index: colData && colData.index\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Maps javascript model prop type to SQLite column type.\r\n *\r\n * Type correspondence:\r\n * ---------------------------------\r\n * Javascript type\t  SQLite type\r\n * ---------------------------------\r\n * number\t            REAL, INTEGER\r\n * boolean            INTEGER\r\n * string\t            TEXT\r\n * Array              Uint8Array BLOB\r\n * null\t              NULL\r\n * ----------------------------------\r\n * Ref.: https://www.sqlite.org/datatype3.html\r\n *\r\n * @param jsPropType JavaScript type\r\n * @return DBtype SQLite type\r\n */\r\nexport function getDBTypeFromPropType(jsPropType?: string): DBtype {\r\n  jsPropType = jsPropType && jsPropType.toLowerCase();\r\n  let result: DBtype;\r\n\r\n  if (jsPropType === 'string') {\r\n    result = DBtype.STRING;\r\n  } else if (jsPropType === 'number') {\r\n    result = DBtype.INTEGER;\r\n  } else if (jsPropType === 'null') {\r\n    result = DBtype.NULL;\r\n  } else {\r\n    throw new InvalidPropTypeError(jsPropType);\r\n  }\r\n  return result;\r\n}","//todo: actualizar dependencias rollup y typescript\r\n//todo: liberar memoria con close() al terminar\r\n//todo: comentar funciones para que aparezcan en api doc\r\n// Import here Polyfills if needed. Recommended core-js (npm i -D core-js)\r\n// import \"core-js/fn/array.find\"\r\nexport * from './orm/database'\r\nexport * from './orm/model'\r\nexport * from './orm/collection'\r\nexport * from './orm/column'\r\nexport * from './orm/decorators'\r\nexport * from './orm/exceptions'\r\nexport * from './orm/query.builder'\r\nexport * from './orm/yago.logger'\r\n\r\nexport enum DBtype {\r\n  INTEGER = 'integer',\r\n  REAL = 'real',\r\n  BOOLEAN = 'integer', // SQLite does not admit boolean values natively\r\n  STRING = 'varchar',\r\n  TEXT = 'text',\r\n  DATE = 'varchar',\r\n  BLOB = 'blob',\r\n  NULL = 'null' // null is reserved word\r\n}\r\n"],"names":["query","tslib_1.__extends","Reflect","global"],"mappings":"AAAA;;;;;;;AAQA,IAAM,iBAAiB,GAAW,OAAO,CAAC;;;;;;AAO1C,IAAa,eAAe,GAAG,UAAC,SAAiB;IAC/C,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACpE,IAAM,KAAK,GAAG,IAAI,MAAM,CAAC,QAAQ,GAAG,SAAS,GAAG,WAAW,CAAC,CAAC;IAC7D,IAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC5C,OAAO,OAAO,KAAK,IAAI,GAAG,EAAE,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;CACnF,CAAC;;;;;;;;AASF,oCAA2C,GAAW,EAAE,GAAW,EAAE,KAAa;IAChF,IAAM,EAAE,GAAG,IAAI,MAAM,CAAC,QAAQ,GAAG,GAAG,GAAG,WAAW,EAAE,GAAG,CAAC,CAAC;IACzD,IAAM,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;IACtD,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;QACjB,OAAO,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;KACzD;SACI;QACH,OAAO,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC;KAC5C;CACF;;AAGD,IAAI,WAAW,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC;AAC5C,WAAW,GAAG,WAAW,IAAI,iBAAiB,CAAC;;;;;AAM/C;;IAEE,OAAO,CAAC,GAAG,GAAG,eAAQ,CAAC;IACvB,OAAO,CAAC,KAAK,GAAG,eAAQ,CAAC;IACzB,OAAO,CAAC,IAAI,GAAG,eAAQ,CAAC;CACzB;AAED,IAAI,WAAW,KAAK,OAAO,EAAE;IAC3B,cAAc,EAAE,CAAC;CAClB;;;;;;AAOD,IAAa,UAAU,GAAG;IACxB,IAAI,EAAE,mFAAmF;IACzF,MAAM,EAAE,eAAe;IACvB,SAAS,EAAE,0BAA0B;CACtC,CAAC;;;;;;;;AASF,kBAAyB,GAAW,EAAE,MAAmC;IACvE,IAAI,MAAM,KAAK,OAAO,EAAE;QACtB,IAAM,QAAM,GAAG,UAAU,CAAC,IAAI,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,OAAK,GAAK,EAAE,QAAM,CAAC,CAAC;KACjC;SACD,IAAI,MAAM,KAAK,QAAQ,EAAE;QACvB,IAAM,QAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,cAAO,GAAK,EAAE,QAAM,CAAC,CAAC;KACnC;SAAM;QACL,OAAO,CAAC,GAAG,CAAC,OAAK,GAAK,EAAE,MAAM,CAAC,CAAA;KAChC;CACF;;;;;;AAOD,aAAoB,GAAW,EAAE,MAAc;IAC7C,OAAO,CAAC,GAAG,CAAC,OAAK,GAAK,EAAE,MAAM,CAAC,CAAC;CACjC;;;;;;;;;;;0CAcyC;;AC/G1C;AAEA,IAAM,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAE9B,AACA,IAAM,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;;;;AA0FxC,IAAW,EAAE,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC;AAEnC,EAAE,CAAC,SAAS,CAAC,WAAW,GAAG,UAAC,QAAa;IACvC,EAAE,GAAG,QAAQ,CAAC;CACf,CAAC;AAEF,EAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAC,KAA4B;IACnD,IAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;IACrC,QAAQ,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IAC/B,OAAO,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;CAC5B,CAAC;AAEF,EAAE,CAAC,SAAS,CAAC,SAAS,GAAG,UAAC,KAA4B,EAAE,SAAyB;IAAzB,0BAAA,EAAA,gBAAyB;IAC/E,SAAS,IAAI,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAC;IACjD,OAAO,EAAE,CAAC,UAAU,CAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAE,CAAC;CACtD,CAAC;AAEF,EAAE,CAAC,SAAS,CAAC,UAAU,GAAG,UAAC,SAAc;IACvC,IAAI,MAAM,GAAU,EAAE,CAAC;IACvB,OAAO,SAAS,CAAC,IAAI,EAAE,EAAC;QACtB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;KACtC;IACD,SAAS,CAAC,IAAI,EAAE,CAAC;IACjB,OAAO,MAAM,CAAC;CACf,CAAC;AAEF,EAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAC,SAAiB;IACxC,IAAM,MAAM,GAAG,EAAE,CAAC,IAAI,CAAE,iEAA+D,SAAS,MAAG,CAAE,CAAC;IACtG,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAA;CACnC,CAAC;AAEF,EAAE,CAAC,SAAS,CAAC,cAAc,GAAG;IAC5B,OAAO,EAAE,CAAC,SAAS,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;CACtD,CAAC;AAEF,EAAE,CAAC,SAAS,CAAC,SAAS,GAAG;IACvB,OAAO,EAAE,CAAC,SAAS,CAAC,8DAA8D,CAAC,CAAC;CACrF,CAAC;AAEF,EAAE,CAAC,SAAS,CAAC,uBAAuB,GAAG;IACrC,IAAM,MAAM,GAAG,EAAE,CAAC,SAAS,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;IACjE,OAAO,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC;CACnD,CAAC;AAEF,IAAa,cAAc,GAAG,UAAC,YAAoB,EAAE,QAAkB;IACrE,KAAK,CAAC,YAAY,CAAC;SAChB,IAAI,CAAC,UAAC,QAAa;QAClB,IAAI,QAAQ,EAAE;YACZ,OAAO,QAAQ,CAAC,WAAW,EAAE,CAAC;SAC/B;KACF,CAAC,CAAC,IAAI,CAAC,UAAC,WAAgB;QACzB,IAAI,WAAW,EAAE;YACf,IAAM,MAAM,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;YAC3C,IAAM,UAAU,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC5C,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAC3B,IAAI;gBACF,EAAE,CAAC,cAAc,EAAE,CAAC;aACrB;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACrB,KAAK,CAAC,8BAA2B,YAAY,OAAG,CAAC,CAAC;aACnD;YACD,OAAO,CAAC,KAAK,EAAE,CAAC;YAChB,IAAM,SAAS,GAAG,yDAAyD,CAAC;YAC5E,OAAO,CAAC,GAAG,CAAC,oCAAiC,YAAY,QAAI,EAAE,SAAS,CAAC,CAAC;YAC1E,EAAE,CAAC,SAAS,CAAC,yBAAyB,CAAC,CAAC;YACxC,QAAQ,EAAE,CAAC;SACZ;KACF,CAAC;SACD,KAAK,CAAC,UAAC,KAAY;QAClB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,KAAK,CAAC,uBAAuB,CAAC,CAAC;KAChC,CAAC,CAAA;CACH,CAAC;AAEF,IAAa,YAAY,GAAG,UAAC,YAAoB;IAC/C,IAAI;QACF,IAAM,oBAAoB,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;QACxC,IAAM,UAAU,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;QAC/B,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;QACtC,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,YAAY,EAAE,EAAC,IAAI,EAAE,0BAA0B,EAAC,CAAC,CAAC;QAClF,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACxB;IAAC,OAAO,SAAS,EAAE;QAClB,KAAK,CAAC,4CAA4C,CAAC,CAAC;QACpD,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;KAC1B;IACD,EAAE,CAAC,SAAS,CAAC,yBAAyB,CAAC,CAAC;CACzC,CAAC;AAEF,OAAO,CAAC,KAAK,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvLhB,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,IAGI,YAAiB,CAAC;AAEtB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM,EAAE;;;;;IAKnC,YAAY,GAAG,IAAI,CAAC;QAClB,MAAM,EAAE,QAAQ;QAChB,UAAU,EAAE,EAAC,QAAQ,EAAE,UAAU,EAAC;QAClC,gBAAgB,EAAE,IAAI;QACtB,QAAQ,EAAG,cAAc;KAC1B,CAAC,CAAC;CACJ;AAED,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM,EAAE;IACnC,IAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;;;;IAKtC,YAAY,GAAG,IAAI,CAAC;QAClB,MAAM,EAAE,QAAQ;QAChB,KAAK,EAAE,KAAK;QACZ,gBAAgB,EAAE,IAAI;QACtB,QAAQ,EAAE,SAAS;KACpB,CAAC,CAAC;IACH,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;CAC7B;;;;;;;;;AAWD,YAAY,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG;IAC7B,OAAO,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;CAC3B,CAAC;;;;;AAMF,YAAY,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG;IAChC,OAAO,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;CAC9B,CAAC;;AC/CF;IAAA;KA+CC;IA3CQ,wBAAS,GAAhB;QACE,IAAI,IAAI,CAAC;QACT,IAAG,IAAI,CAAC,KAAK,EAAE;YACb,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;SACxB;aAAM;YACL,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;SAC9B;QACD,OAAO,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC;KACjC;IAES,qBAAM,GAAhB,UAAiB,KAAW;QAC1B,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC;QACtBA,YAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;QACjD,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,uBAAuB,EAAE,CAAC;QACxC,OAAO,KAAK,CAAC,EAAE,CAAC;KACjB;IAES,qBAAM,GAAhB,UAAiB,KAAW;QAC1BA,YAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;QACxE,OAAO,KAAK,CAAC,EAAE,CAAC;KACjB;IAEM,mBAAI,GAAX,UAAY,KAAW;QACrB,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC;QACtB,IAAI,YAA6B,CAAC;QAClC,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE;YACnB,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACnC;aAAM;YACL,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACnC;QACD,CAAC,YAAY,GAAG,CAAC,KAAK,QAAQ,CAAC,WAAS,KAAK,CAAC,WAAW,CAAC,IAAI,kBAAa,YAAc,EAAE,QAAQ,CAAC,CAAC;QACrG,OAAO,YAAY,CAAC;KACrB;IAEM,qBAAM,GAAb,UAAc,KAAW;QACvB,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC;QACtB,IAAM,WAAW,GAAG,iBAAe,IAAI,CAAC,SAAS,EAAE,kBAAa,KAAK,CAAC,EAAI,CAAC;QAC3E,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACpB,QAAQ,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAC/B,QAAQ,CAAC,aAAW,IAAI,CAAC,WAAW,CAAC,IAAI,kBAAa,KAAK,CAAC,EAAI,EAAE,QAAQ,CAAC,CAAC;QAC5E,OAAO,KAAK,CAAC,EAAE,CAAC;KACjB;IAEH,WAAC;CAAA,IAAA;;;ICnDuCC,sCAAK;IAE3C,4BAAmB,KAAY,EAAS,YAAmB;QAA3D,YACE,iBAAO,SAUR;QAXkB,WAAK,GAAL,KAAK,CAAO;QAAS,kBAAY,GAAZ,YAAY,CAAO;QAEzD,IAAI,gBAAwB,CAAC;QAC7B,IAAI,YAAY,CAAC,WAAW,CAAC,IAAI,KAAK,UAAU,EAAE;YAChD,gBAAgB,GAAG,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC;SAC5D;aAAM;YACL,gBAAgB,GAAG,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC;SAClD;QACD,IAAM,GAAG,GAAG,MAAI,KAAK,CAAC,WAAW,CAAC,IAAI,YAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAG;aAClE,kDAAgD,gBAAgB,MAAG,CAAA,CAAC;QACtE,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;;KACtB;IACH,yBAAC;CAdD,CAAwC,KAAK,GAc5C;;IAEyCA,wCAAK;IAC7C,8BAAY,MAAe;QAA3B,YACE,iBAAO,SAGR;QAFC,IAAM,GAAG,GAAG,oCAAiC,MAAM,6CAAuC,CAAC;QAC3F,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;;KACtB;IACH,2BAAC;CAND,CAA0C,KAAK,GAM9C;;IAEsCA,qCAAK;IAC1C,2BAAY,UAA8B;QAA1C,YACE,iBAAO,SAGR;QAFC,IAAM,GAAG,GAAG,kCAA+B,UAAU,OAAG,CAAC;QACzD,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;;KACtB;IACH,wBAAC;CAND,CAAuC,KAAK;;;ICrBRA,yBAAI;IAItC,eAAY,KAAkB;QAA9B,YACE,iBAAO,SAER;QADC,MAAM,CAAC,MAAM,CAAC,KAAI,EAAE,KAAK,CAAC,CAAC;;KAC5B;;;;;;;IAQa,YAAM,GAApB,UAAqB,IAAY,EAAE,UAAe;QAChD,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;KAC7B;IAEM,uBAAO,GAAd;QACE,OAAO,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC;KAC9B;IAEO,uCAAuB,GAA/B;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC;KACpD;;IAGM,yBAAS,GAAhB,UAAiB,KAAY;QAC3B,IAAK,CAAC,KAAK,CAAC,OAAO,EAAG;YACpB,MAAM,IAAI,KAAK,CAAC,0BAA0B,GAAG,KAAK,CAAC,CAAC;SACrD;QACD,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAG;YACrB,MAAM,IAAI,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SAC3C;QACD,IAAM,iBAAiB,GAAG,KAAK,CAAC,uBAAuB,EAAE,CAAC;QAC1D,IAAI,CAAC,iBAAiB,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC;QACnC,OAAO,IAAI,CAAC;KACb;;;;IAKM,yBAAS,GAAhB,UAAiB,KAAkB;QACjC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAG;YACpB,MAAM,IAAI,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC3C;QACD,IAAM,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QACjD,IAAM,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC;QAC/D,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QACtC,IAAM,aAAa,GAAYD,YAAK,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC;QACjF,OAAO,aAAa,CAAC,GAAG,CAAE,UAAA,GAAG,IAAI,OAAA,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAA,CAAE,CAAC;KAC7D;;;;;;;IAQM,2BAAW,GAAlB,UAAmB,KAAkB;QACnC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAG;YACpB,MAAM,IAAI,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC3C;QACD,IAAM,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QAC/C,IAAM,kBAAkB,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC1D,IAAI;YACF,IAAM,aAAa,GAAYA,YAAK,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAC1F,OAAO,aAAa,CAAC,GAAG,CAAE,UAAA,GAAG,IAAI,OAAA,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAA,CAAE,CAAC;SAC7D;QAAC,OAAM,SAAS,EAAE;YACjB,OAAO,CAAC,KAAK,CAAC,WAAS,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mCAA6B,KAAK,CAAC,IAAI,OAAG,CAAC,CAAC;YACvF,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACzB,OAAO,EAAE,CAAC;SACX;KACF;;;;IAKM,8BAAc,GAArB;QACE,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAM,YAAY,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG;gBAC7C,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtD,IAAM,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;gBAC1D,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;gBACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG;oBAC5C,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvC,WAAW,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC;iBACjC;aACF;SACF;KACF;;;;;;;;;;;IAYa,uBAAiB,GAA/B,UAAgC,KAAU;QACxC,KAAK,CAAC,WAAW,EAAE,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,UAAC,YAAmB;YACjE,IAAI;gBACF,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE,EAAC,UAAU,EAAE,KAAK,EAAC,CAAC,CAAC;aACvF;YAAC,OAAM,SAAS,EAAE;gBACjB,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBACzB,KAAK,CAAC,SAAS,CAAC,CAAA;aACjB;SACF,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;KACd;IAEM,2BAAW,GAAlB;QACE,OAAO,IAAI,CAAC,OAAO,KAAK,SAAS,CAAC;KACnC;IAoDH,YAAC;CA1KD,CAAoC,IAAI;;ACLxC;AACA;;;;IA2CE,gBAAY,EAUF;YATR,cAAI,EACJ,cAAI,EACJ,kBAAM,EACN,0BAAU,EACV,8BAAY,EACZ,kBAAM,EACN,8BAAY,EACZ,4BAAW,EACX,gBAAK;QAEL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;;;;;;;IAWM,sCAAqB,GAA5B,UAA6B,KAAmB;QAC9C,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,MAAM,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxC;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,MAAM,IAAI,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAChD;QAED,KAAK;aACF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;aAClB,UAAU,CAAC,IAAI,CAAC;aAChB,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;aAC1B,QAAQ,yBAAsB;aAC9B,QAAQ,yBAAsB,CAAA;KAClC;;;;;IAMM,6BAAY,GAAnB,UAAoB,KAAyB;QAC3C,IAAI,SAAS,CAAC;QACd,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAE1B,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,6DAA6D,CAAC,CAAC;QAEzF,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,EAAE;YACxB,MAAM,IAAI,iBAAiB,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC;SACjD;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;SACnC;QACD,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;SACnD;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,SAAS,GAAG,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;SAC5E;QACD,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;SACjE;QACD,OAAO,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KACtD;IAEc,0BAAmB,GAAlC,UACE,SAAc,EACd,YAAgC,EAChC,OAAe,EACf,OAAe;QAEf,IAAI,SAAS,EAAE;YACb,OAAO,SAAS,CAAC,MAAM,EAAE,CAAC;SAC3B;aAAM;YACL,OAAO,YAAY,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;SAChD;KACF;IAEc,eAAQ,GAAvB,UACE,SAAc,EACd,YAAgC,EAChC,OAAe,EACf,OAAe;QAEf,IAAI,SAAS,EAAE;YACb,OAAO,SAAS,CAAC,KAAK,EAAE,CAAC;SAC1B;aAAM;YACL,OAAO,YAAY,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;SAC/C;KACF;IAEM,6BAAY,GAAnB;QACE,OAAO,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACjC;IACH,aAAC;CAAA;;ACpID;;;;AAIA;IAAgCC,8BAAI;IAElC,oBAAsB,KAAU;QAAhC,YACE,iBAAO,SAKR;QANqB,WAAK,GAAL,KAAK,CAAK;QAE9B,IAAI,KAAI,CAAC,YAAY,EAAE,EAAE;YACvB,KAAI,CAAC,eAAe,EAAE,CAAC;SACxB;QACD,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,SAAS,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;;KACnD;IAEO,gCAAW,GAAnB,UAAoB,SAAiB,EAAE,OAAiB;QAAxD,iBAOC;QANC,IAAM,gBAAgB,GAAGD,YAAK,CAAC,MAAM,CAAC,GAAG,CAAC,wBAAwB,CAAC;aAChE,iBAAiB,CAAC,SAAS,CAAC,CAAC,WAAW,CACzC,SAAS,EAAE,UAAC,YAA0B;YACpC,KAAI,CAAC,aAAa,CAAC,OAAO,EAAE,YAAY,CAAC,CAAA;SAC1C,CAAC,CAAC;QACL,EAAE,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;KAC/B;;IAGO,kCAAa,GAArB,UAAsB,OAAiB,EAAE,YAA0B;QACjE,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC9B,KAAK,IAAI,CAAC,IAAI,OAAO,EAAE;YACrB,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SACvC;KACF;;;;;;IAOM,yCAAoB,GAA3B,UAA4B,KAAe;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/C;QACD,OAAO,KAAgB,CAAC;KACzB;IAEM,2BAAM,GAAb,UAAe,IAA6C;QAA7C,qBAAA,EAAA,SAA6B,QAAQ,EAAE,KAAK,EAAC;QAC1D,IAAM,MAAM,GAAG,EAAE,CAAC,SAAS,CAAC,mBAAiB,IAAI,CAAC,SAAS,EAAI,CAAC,CAAC;QACjE,IAAM,MAAM,GAAY,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;QAC1D,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,CAAC,OAAO,CAAE,UAAC,KAAY,IAAK,OAAA,KAAK,CAAC,cAAc,EAAE,GAAA,CAAE,CAAC;YAC3D,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;SAC1C;KACF;IAEM,4BAAO,GAAd,UAAgB,EAAmB,EAAE,IAA6C;QAA7C,qBAAA,EAAA,SAA6B,QAAQ,EAAE,KAAK,EAAC;QAChF,IAAM,MAAM,GAAG,EAAE,CAAC,SAAS,CAAC,mBAAiB,IAAI,CAAC,SAAS,EAAE,kBAAa,EAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACnF,IAAM,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;QACD,OAAO,KAAK,CAAC;KACd;IAEM,gCAAW,GAAlB,UAAmB,MAAc,EACd,OAAoB,EACpB,IAA6C;QAD7C,wBAAA,EAAA,YAAoB;QACpB,qBAAA,EAAA,SAA6B,QAAQ,EAAE,KAAK,EAAC;QAE9D,IAAM,MAAM,GAAGA,YAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;QAChF,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAM,MAAM,GAAY,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;YAC1D,MAAM,CAAC,OAAO,CAAE,UAAC,KAAY,IAAK,OAAA,KAAK,CAAC,cAAc,EAAE,GAAA,CAAE,CAAC;YAC3D,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;SAC1C;KACF;IAEM,kCAAa,GAApB,UAAqB,KAAU,EACV,QAAgB,EAChB,KAAU,EACV,OAAsB,EACtB,IAA6C;QAD7C,wBAAA,EAAA,YAAsB;QACtB,qBAAA,EAAA,SAA6B,QAAQ,EAAE,KAAK,EAAC;QAEhE,IAAM,MAAM,GAAGA,YAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;QAChG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAM,MAAM,GAAY,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;YAC1D,MAAM,CAAC,OAAO,CAAE,UAAC,KAAY,IAAK,OAAA,KAAK,CAAC,cAAc,EAAE,GAAA,CAAE,CAAC;YAC3D,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;SAC1C;KACF;IAEO,iCAAY,GAApB;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAA;KACpC;IAEO,yCAAoB,GAA5B,UAA6B,KAAa;QACxC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAM,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;QACtD,IAAM,iBAAiB,GAAG,IAAI,MAAM,CAAC;YACnC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,KAAK;YACtC,MAAM;YACN,UAAU,EAAE,IAAI;YAChB,YAAY,EAAE,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG;YAC5C,WAAW,EAAE,IAAI;SAClB,CAAC,CAAC;QACH,IAAM,SAAS,GAAG,gFAAgF;YAChG,6DAA6D,CAAC;QAChE,OAAO,CAAC,GAAG,CAAC,mDAA4C,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,YAAI,EAAE,SAAS,CAAC,CAAC;QAC3G,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,IAAM,mBAAmB,GAAG,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC;QACvE,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;KAC7C;IAEO,oCAAe,GAAvB;QACE,IAAM,aAAa,GAAY,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC9D,KAAI,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACxD,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAClC;KACF;;;;;;IAOa,yBAAc,GAA5B,UAA6B,UAAe;QAC1C,OAAO,EAAE,CAAC,SAAS,CAAE,uBAAqB,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,MAAG,CAAE,CAAC;KACjF;;;;;IAMM,0BAAK,GAAZ;QACE,OAAOA,YAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;KAChC;;;;;;;IAQa,oBAAS,GAAvB,UAAwB,SAAiB,EAAE,UAAkB;QAC3D,IAAM,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,wEACI,SAAS,uBAAkB,UAAU,MAAG,CAAC,CAAC;QACtE,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACpC;;;;;;IAOa,sBAAW,GAAzB,UAA0B,SAAiB;QACzC,EAAE,CAAC,QAAQ,CAAEA,YAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAE,CAAC;KAC1D;IAEH,iBAAC;CAhKD,CAAgC,IAAI;;;;ACvBpC;;;;;;;;;;;;;;AAcA,IAAUE,SAAO,CAkwDhB;AAlwDD,WAAU,OAAO;;;IAgmBb,CAAC,UAAqB,OAAuG;QACzH,IAAM,IAAI,GAAG,OAAOC,cAAM,KAAK,QAAQ,GAAGA,cAAM;YAC5C,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI;gBAC/B,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI;oBAC/B,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;QAE/B,IAAI,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;QACrC,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW,EAAE;YACrC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;SAC1B;aACI;YACD,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;SACnD;QAED,OAAO,CAAC,QAAQ,CAAC,CAAC;QAElB,sBAAsB,MAAsB,EAAE,QAAqF;YAC/H,OAAO,UAAiC,GAAM,EAAE,KAAwB;gBACpE,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;oBACnC,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,OAAA,EAAE,CAAC,CAAC;iBACrF;gBACD,IAAI,QAAQ;oBAAE,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aACtC,CAAC;SACL;KACJ,EACA,UAAU,QAAQ;QACf,IAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;;QAG/C,IAAM,cAAc,GAAG,OAAO,MAAM,KAAK,UAAU,CAAC;QACpD,IAAM,iBAAiB,GAAG,cAAc,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,WAAW,GAAG,MAAM,CAAC,WAAW,GAAG,eAAe,CAAC;QAC7H,IAAM,cAAc,GAAG,cAAc,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,GAAG,MAAM,CAAC,QAAQ,GAAG,YAAY,CAAC;QACjH,IAAM,cAAc,GAAG,OAAO,MAAM,CAAC,MAAM,KAAK,UAAU,CAAC;QAC3D,IAAM,aAAa,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,CAAC;QACzD,IAAM,SAAS,GAAG,CAAC,cAAc,IAAI,CAAC,aAAa,CAAC;QAEpD,IAAM,OAAO,GAAG;;YAEZ,MAAM,EAAE,cAAc;kBAChB,cAAS,OAAA,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAe,CAAC,GAAA;kBAC1D,aAAa;sBACT,cAAS,OAAA,cAAc,CAAC,EAAE,SAAS,EAAE,IAAW,EAAgB,CAAC,GAAA;sBACjE,cAAS,OAAA,cAAc,CAAC,EAAgB,CAAC,GAAA;YAEnD,GAAG,EAAE,SAAS;kBACR,UAAI,GAAe,EAAE,GAA6B,IAAK,OAAA,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAA;kBAC5E,UAAI,GAAe,EAAE,GAA6B,IAAK,OAAA,GAAG,IAAI,GAAG,GAAA;YAEvE,GAAG,EAAE,SAAS;kBACR,UAAI,GAAe,EAAE,GAA6B,IAAoB,OAAA,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,SAAS,GAAA;kBAClH,UAAI,GAAe,EAAE,GAA6B,IAAoB,OAAA,GAAG,CAAC,GAAG,CAAC,GAAA;SACvF,CAAC;;QAGF,IAAM,iBAAiB,GAAG,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC1D,IAAM,WAAW,GAAG,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,KAAK,MAAM,CAAC;QAC9H,IAAM,IAAI,GAAe,CAAC,WAAW,IAAI,OAAO,GAAG,KAAK,UAAU,IAAI,OAAO,GAAG,CAAC,SAAS,CAAC,OAAO,KAAK,UAAU,GAAG,GAAG,GAAG,iBAAiB,EAAE,CAAC;QAC9I,IAAM,IAAI,GAAe,CAAC,WAAW,IAAI,OAAO,GAAG,KAAK,UAAU,IAAI,OAAO,GAAG,CAAC,SAAS,CAAC,OAAO,KAAK,UAAU,GAAG,GAAG,GAAG,iBAAiB,EAAE,CAAC;QAC9I,IAAM,QAAQ,GAAmB,CAAC,WAAW,IAAI,OAAO,OAAO,KAAK,UAAU,GAAG,OAAO,GAAG,qBAAqB,EAAE,CAAC;;;QAInH,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAwD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA6CtF,kBAAkB,UAAgD,EAAE,MAAW,EAAE,WAA6B,EAAE,UAAsC;YAClJ,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;gBAChD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;gBAC7C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;oBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;gBACpG,IAAI,MAAM,CAAC,UAAU,CAAC;oBAAE,UAAU,GAAG,SAAS,CAAC;gBAC/C,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;gBACzC,OAAO,gBAAgB,CAAoB,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;aAC3F;iBACI;gBACD,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;oBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;gBAChD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;oBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;gBAClD,OAAO,mBAAmB,CAAmB,UAAU,EAAY,MAAM,CAAC,CAAC;aAC9E;SACJ;QAED,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA6C/B,kBAAkB,WAAgB,EAAE,aAAkB;YAGlD,mBAAmB,MAAW,EAAE,WAA6B;gBACzD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;gBAC7C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;oBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;gBACpF,yBAAyB,CAAC,WAAW,EAAE,aAAa,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;aAC9E;YACD,OAAO,SAAS,CAAC;SACpB;QAED,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA+C/B,wBAAwB,WAAgB,EAAE,aAAkB,EAAE,MAAW,EAAE,WAA6B;YACpG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;gBAAE,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;YACxE,OAAO,yBAAyB,CAAC,WAAW,EAAE,aAAa,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;SACrF;QAED,QAAQ,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA0C3C,qBAAqB,WAAgB,EAAE,MAAW,EAAE,WAA6B;YAC7E,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;gBAAE,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;YACxE,OAAO,mBAAmB,CAAC,WAAW,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;SAChE;QAED,QAAQ,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA0CrC,wBAAwB,WAAgB,EAAE,MAAW,EAAE,WAA6B;YAChF,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;gBAAE,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;YACxE,OAAO,sBAAsB,CAAC,WAAW,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;SACnE;QAED,QAAQ,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA0C3C,qBAAqB,WAAgB,EAAE,MAAW,EAAE,WAA6B;YAC7E,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;gBAAE,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;YACxE,OAAO,mBAAmB,CAAC,WAAW,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;SAChE;QAED,QAAQ,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA0CrC,wBAAwB,WAAgB,EAAE,MAAW,EAAE,WAA6B;YAChF,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;gBAAE,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;YACxE,OAAO,sBAAsB,CAAC,WAAW,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;SACnE;QAED,QAAQ,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAyC3C,yBAAyB,MAAW,EAAE,WAA6B;YAC/D,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;gBAAE,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;YACxE,OAAO,oBAAoB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;SACpD;QAED,QAAQ,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAyC7C,4BAA4B,MAAW,EAAE,WAA6B;YAClE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;gBAAE,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;YACxE,OAAO,uBAAuB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;SACvD;QAED,QAAQ,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA0CnD,wBAAwB,WAAgB,EAAE,MAAW,EAAE,WAA6B;YAChF,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;gBAAE,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;YACxE,IAAM,WAAW,GAAG,sBAAsB,CAAC,MAAM,EAAE,WAAW,aAAa,KAAK,CAAC,CAAC;YAClF,IAAI,WAAW,CAAC,WAAW,CAAC;gBAAE,OAAO,KAAK,CAAC;YAC3C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC;gBAAE,OAAO,KAAK,CAAC;YACnD,IAAI,WAAW,CAAC,IAAI,GAAG,CAAC;gBAAE,OAAO,IAAI,CAAC;YACtC,IAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC5C,cAAc,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YACnC,IAAI,cAAc,CAAC,IAAI,GAAG,CAAC;gBAAE,OAAO,IAAI,CAAC;YACzC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC;SACf;QAED,QAAQ,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;QAE3C,6BAA6B,UAA4B,EAAE,MAAgB;YACvE,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC7C,IAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;oBAC/C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;wBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;oBACrD,MAAM,GAAa,SAAS,CAAC;iBAChC;aACJ;YACD,OAAO,MAAM,CAAC;SACjB;QAED,0BAA0B,UAA6B,EAAE,MAAW,EAAE,WAA4B,EAAE,UAA0C;YAC1I,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC7C,IAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAM,SAAS,GAAG,SAAS,CAAC,MAAM,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;gBAC7D,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;oBAC/C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;wBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;oBAChD,UAAU,GAAuB,SAAS,CAAC;iBAC9C;aACJ;YACD,OAAO,UAAU,CAAC;SACrB;QAMD,gCAAgC,CAAM,EAAE,CAA8B,EAAE,MAAe;YACnF,IAAI,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,WAAW,CAAC,cAAc,CAAC,EAAE;gBAC7B,IAAI,CAAC,MAAM;oBAAE,OAAO,SAAS,CAAC;gBAC9B,cAAc,GAAG,IAAI,IAAI,EAA8C,CAAC;gBACxE,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;aACnC;YACD,IAAI,WAAW,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,WAAW,CAAC,WAAW,CAAC,EAAE;gBAC1B,IAAI,CAAC,MAAM;oBAAE,OAAO,SAAS,CAAC;gBAC9B,WAAW,GAAG,IAAI,IAAI,EAAY,CAAC;gBACnC,cAAc,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;aACtC;YACD,OAAO,WAAW,CAAC;SACtB;;;QAID,6BAA6B,WAAgB,EAAE,CAAM,EAAE,CAA8B;YACjF,IAAM,MAAM,GAAG,sBAAsB,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzD,IAAI,MAAM;gBAAE,OAAO,IAAI,CAAC;YACxB,IAAM,MAAM,GAAG,sBAAsB,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAAE,OAAO,mBAAmB,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;YACxE,OAAO,KAAK,CAAC;SAChB;;;QAID,gCAAgC,WAAgB,EAAE,CAAM,EAAE,CAA8B;YACpF,IAAM,WAAW,GAAG,sBAAsB,CAAC,CAAC,EAAE,CAAC,aAAa,KAAK,CAAC,CAAC;YACnE,IAAI,WAAW,CAAC,WAAW,CAAC;gBAAE,OAAO,KAAK,CAAC;YAC3C,OAAO,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;SAClD;;;QAID,6BAA6B,WAAgB,EAAE,CAAM,EAAE,CAA8B;YACjF,IAAM,MAAM,GAAG,sBAAsB,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACzD,IAAI,MAAM;gBAAE,OAAO,sBAAsB,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,IAAM,MAAM,GAAG,sBAAsB,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAAE,OAAO,mBAAmB,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;YACxE,OAAO,SAAS,CAAC;SACpB;;;QAID,gCAAgC,WAAgB,EAAE,CAAM,EAAE,CAA8B;YACpF,IAAM,WAAW,GAAG,sBAAsB,CAAC,CAAC,EAAE,CAAC,aAAa,KAAK,CAAC,CAAC;YACnE,IAAI,WAAW,CAAC,WAAW,CAAC;gBAAE,OAAO,SAAS,CAAC;YAC/C,OAAO,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;SACvC;;;QAID,mCAAmC,WAAgB,EAAE,aAAkB,EAAE,CAAM,EAAE,CAA8B;YAC3G,IAAM,WAAW,GAAG,sBAAsB,CAAC,CAAC,EAAE,CAAC,aAAa,IAAI,CAAC,CAAC;YAClE,WAAW,CAAC,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;SAC/C;;;QAID,8BAA8B,CAAM,EAAE,CAA8B;YAChE,IAAM,OAAO,GAAG,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9C,IAAM,MAAM,GAAG,sBAAsB,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,MAAM,KAAK,IAAI;gBAAE,OAAO,OAAO,CAAC;YACpC,IAAM,UAAU,GAAG,oBAAoB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACnD,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC;gBAAE,OAAO,OAAO,CAAC;YAC3C,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC;gBAAE,OAAO,UAAU,CAAC;YAC3C,IAAM,GAAG,GAAG,IAAI,IAAI,EAAO,CAAC;YAC5B,IAAM,IAAI,GAAU,EAAE,CAAC;YACvB,KAAkB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;gBAApB,IAAM,GAAG,gBAAA;gBACV,IAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC5B,IAAI,CAAC,MAAM,EAAE;oBACT,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAClB;aACJ;YACD,KAAkB,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU;gBAAvB,IAAM,GAAG,mBAAA;gBACV,IAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC5B,IAAI,CAAC,MAAM,EAAE;oBACT,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAClB;aACJ;YACD,OAAO,IAAI,CAAC;SACf;;;QAID,iCAAiC,CAAM,EAAE,CAA8B;YACnE,IAAM,IAAI,GAAU,EAAE,CAAC;YACvB,IAAM,WAAW,GAAG,sBAAsB,CAAC,CAAC,EAAE,CAAC,aAAa,KAAK,CAAC,CAAC;YACnE,IAAI,WAAW,CAAC,WAAW,CAAC;gBAAE,OAAO,IAAI,CAAC;YAC1C,IAAM,OAAO,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC;YACnC,IAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;YACtC,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,OAAO,IAAI,EAAE;gBACT,IAAM,IAAI,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;gBACpC,IAAI,CAAC,IAAI,EAAE;oBACP,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;oBAChB,OAAO,IAAI,CAAC;iBACf;gBACD,IAAM,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;gBACtC,IAAI;oBACA,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;iBAExB;gBAAA,OAAO,CAAC,EAAE;oBACN,IAAI;wBACA,aAAa,CAAC,QAAQ,CAAC,CAAC;qBAC3B;4BACO;wBACJ,MAAM,CAAC,CAAC;qBACX;iBACJ;gBACD,CAAC,EAAE,CAAC;aACP;SACJ;;;QAID,cAAc,CAAM;YAChB,IAAI,CAAC,KAAK,IAAI;gBAAE,OAAO,aAAS;YAChC,QAAQ,OAAO,CAAC;gBACZ,KAAK,WAAW,EAAE,OAAO,kBAAc;gBACvC,KAAK,SAAS,EAAE,OAAO,gBAAY;gBACnC,KAAK,QAAQ,EAAE,OAAO,eAAW;gBACjC,KAAK,QAAQ,EAAE,OAAO,eAAW;gBACjC,KAAK,QAAQ,EAAE,OAAO,eAAW;gBACjC,KAAK,QAAQ,EAAE,OAAO,CAAC,KAAK,IAAI,GAAG,eAAW,eAAW;gBACzD,SAAS,OAAO,eAAW;aAC9B;SACJ;;;QAgBD,qBAAqB,CAAM;YACvB,OAAO,CAAC,KAAK,SAAS,CAAC;SAC1B;;;QAID,gBAAgB,CAAM;YAClB,OAAO,CAAC,KAAK,IAAI,CAAC;SACrB;;;QAID,kBAAkB,CAAM;YACpB,OAAO,OAAO,CAAC,KAAK,QAAQ,CAAC;SAChC;;;QAID,kBAAqB,CAA4D;YAC7E,OAAO,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,KAAK,IAAI,GAAG,OAAO,CAAC,KAAK,UAAU,CAAC;SACvE;;;;;QAOD,qBAAqB,KAAU,EAAE,aAAmB;YAChD,QAAQ,IAAI,CAAC,KAAK,CAAC;gBACf,KAAK,mBAAe,OAAO,KAAK,CAAC;gBACjC,KAAK,cAAU,OAAO,KAAK,CAAC;gBAC5B,KAAK,iBAAa,OAAO,KAAK,CAAC;gBAC/B,KAAK,gBAAY,OAAO,KAAK,CAAC;gBAC9B,KAAK,gBAAY,OAAO,KAAK,CAAC;gBAC9B,KAAK,gBAAY,OAAO,KAAK,CAAC;aACjC;YACD,IAAM,IAAI,GAAoC,aAAa,KAAK,iBAAa,QAAQ,GAAG,aAAa,KAAK,iBAAa,QAAQ,GAAG,SAAS,CAAC;YAC5I,IAAM,YAAY,GAAG,SAAS,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;YACzD,IAAI,YAAY,KAAK,SAAS,EAAE;gBAC5B,IAAM,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBAC9C,IAAI,QAAQ,CAAC,MAAM,CAAC;oBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;gBAC5C,OAAO,MAAM,CAAC;aACjB;YACD,OAAO,mBAAmB,CAAC,KAAK,EAAE,IAAI,KAAK,SAAS,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAC;SAC3E;;;QAID,6BAA6B,CAAM,EAAE,IAAyB;YAC1D,IAAI,IAAI,KAAK,QAAQ,EAAE;gBACnB,IAAM,UAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;gBAC5B,IAAI,UAAU,CAAC,UAAQ,CAAC,EAAE;oBACtB,IAAM,MAAM,GAAG,UAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAChC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;wBAAE,OAAO,MAAM,CAAC;iBACxC;gBACD,IAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;gBAC1B,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE;oBACrB,IAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;wBAAE,OAAO,MAAM,CAAC;iBACxC;aACJ;iBACI;gBACD,IAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;gBAC1B,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE;oBACrB,IAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;wBAAE,OAAO,MAAM,CAAC;iBACxC;gBACD,IAAM,UAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;gBAC5B,IAAI,UAAU,CAAC,UAAQ,CAAC,EAAE;oBACtB,IAAM,MAAM,GAAG,UAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAChC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;wBAAE,OAAO,MAAM,CAAC;iBACxC;aACJ;YACD,MAAM,IAAI,SAAS,EAAE,CAAC;SACzB;;;QAID,mBAAmB,QAAa;YAC5B,OAAO,CAAC,CAAC,QAAQ,CAAC;SACrB;;;QAID,kBAAkB,QAAa;YAC3B,OAAO,EAAE,GAAG,QAAQ,CAAC;SACxB;;;QAID,uBAAuB,QAAa;YAChC,IAAM,GAAG,GAAG,WAAW,CAAC,QAAQ,EAAE,eAAW,CAAC;YAC9C,IAAI,QAAQ,CAAC,GAAG,CAAC;gBAAE,OAAO,GAAG,CAAC;YAC9B,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;SACxB;;;;;QAOD,iBAAiB,QAAa;YAC1B,OAAO,KAAK,CAAC,OAAO;kBACd,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;kBACvB,QAAQ,YAAY,MAAM;sBACtB,QAAQ,YAAY,KAAK;sBACzB,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,gBAAgB,CAAC;SAC3E;;;QAID,oBAAoB,QAAa;;YAE7B,OAAO,OAAO,QAAQ,KAAK,UAAU,CAAC;SACzC;;;QAID,uBAAuB,QAAa;;YAEhC,OAAO,OAAO,QAAQ,KAAK,UAAU,CAAC;SACzC;;;QAID,uBAAuB,QAAa;YAChC,QAAQ,IAAI,CAAC,QAAQ,CAAC;gBAClB,KAAK,gBAAY,OAAO,IAAI,CAAC;gBAC7B,KAAK,gBAAY,OAAO,IAAI,CAAC;gBAC7B,SAAS,OAAO,KAAK,CAAC;aACzB;SACJ;;;;;QAOD,mBAAmB,CAAM,EAAE,CAAM;YAC7B,IAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI;gBAAE,OAAO,SAAS,CAAC;YAC1D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;gBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;YAC7C,OAAO,IAAI,CAAC;SACf;;;QAKD,qBAAwB,GAAgB;YACpC,IAAM,MAAM,GAAG,SAAS,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;gBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;YAC/C,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBAAE,MAAM,IAAI,SAAS,EAAE,CAAC;YAC/C,OAAO,QAAQ,CAAC;SACnB;;;QAID,uBAA0B,UAA6B;YACnD,OAAO,UAAU,CAAC,KAAK,CAAC;SAC3B;;;QAID,sBAAyB,QAAqB;YAC1C,IAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC/B,OAAO,MAAM,CAAC,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC;SACvC;;;QAID,uBAA0B,QAAqB;YAC3C,IAAM,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC7B,IAAI,CAAC;gBAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC3B;;;;;QAOD,gCAAgC,CAAM;YAClC,IAAM,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,iBAAiB;gBAAE,OAAO,KAAK,CAAC;;;;;;;;YAUrE,IAAI,KAAK,KAAK,iBAAiB;gBAAE,OAAO,KAAK,CAAC;;YAG9C,IAAM,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;YAC9B,IAAM,cAAc,GAAG,SAAS,IAAI,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YACrE,IAAI,cAAc,IAAI,IAAI,IAAI,cAAc,KAAK,MAAM,CAAC,SAAS;gBAAE,OAAO,KAAK,CAAC;;YAGhF,IAAM,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC;YAC/C,IAAI,OAAO,WAAW,KAAK,UAAU;gBAAE,OAAO,KAAK,CAAC;;YAGpD,IAAI,WAAW,KAAK,CAAC;gBAAE,OAAO,KAAK,CAAC;;YAGpC,OAAO,WAAW,CAAC;SACtB;;QAGD;YACI,IAAM,aAAa,GAAG,EAAE,CAAC;YACzB,IAAM,aAAa,GAAU,EAAE,CAAC;YAEhC;gBAKI,qBAAY,IAAS,EAAE,MAAW,EAAE,QAAiC;oBAF7D,WAAM,GAAG,CAAC,CAAC;oBAGf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;oBACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;iBAC7B;gBACD,mCAAY,GAAZ,cAAiB,OAAO,IAAI,CAAC,EAAE;gBAC/B,sBAAC,cAAc,CAAC,GAAhB,cAAqB,OAAO,IAAI,CAAC,EAAE;gBACnC,0BAAI,GAAJ;oBACI,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC1B,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;wBACzC,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;wBACtE,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;4BAChC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;4BACjB,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;4BAC3B,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;yBAChC;6BACI;4BACD,IAAI,CAAC,MAAM,EAAE,CAAC;yBACjB;wBACD,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;qBACzC;oBACD,OAAO,EAAE,KAAK,EAAS,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;iBAClD;gBACD,2BAAK,GAAL,UAAM,KAAU;oBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;wBAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;wBACjB,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;wBAC3B,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;qBAChC;oBACD,MAAM,KAAK,CAAC;iBACf;gBACD,4BAAM,GAAN,UAAO,KAAS;oBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;wBAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;wBACjB,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;wBAC3B,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;qBAChC;oBACD,OAAO,EAAE,KAAK,EAAS,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;iBAC9C;gBACL,kBAAC;aAAA,IAAA;YAED;gBAAO;oBACK,UAAK,GAAQ,EAAE,CAAC;oBAChB,YAAO,GAAsB,EAAE,CAAC;oBAChC,cAAS,GAAG,aAAa,CAAC;oBAC1B,gBAAW,GAAG,CAAC,CAAC,CAAC;iBAoD5B;gBAnDG,sBAAI,qBAAI;yBAAR,cAAa,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;;;mBAAA;gBACxC,iBAAG,GAAH,UAAI,GAAM,IAAa,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,aAAa,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE;gBACvE,iBAAG,GAAH,UAAI,GAAM;oBACN,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,aAAa,KAAK,CAAC,CAAC;oBAChD,OAAO,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;iBACvD;gBACD,iBAAG,GAAH,UAAI,GAAM,EAAE,KAAQ;oBAChB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,aAAa,IAAI,CAAC,CAAC;oBAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;oBAC5B,OAAO,IAAI,CAAC;iBACf;gBACD,oBAAM,GAAN,UAAO,GAAM;oBACT,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,aAAa,KAAK,CAAC,CAAC;oBAChD,IAAI,KAAK,IAAI,CAAC,EAAE;wBACZ,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;wBAC/B,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;4BACnC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BAClC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;yBACzC;wBACD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;wBACpB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;wBACtB,IAAI,GAAG,KAAK,IAAI,CAAC,SAAS,EAAE;4BACxB,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;4BAC/B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;yBACzB;wBACD,OAAO,IAAI,CAAC;qBACf;oBACD,OAAO,KAAK,CAAC;iBAChB;gBACD,mBAAK,GAAL;oBACI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;oBACtB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;oBACxB,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;oBAC/B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;iBACzB;gBACD,kBAAI,GAAJ,cAAS,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,EAAE;gBACpE,oBAAM,GAAN,cAAW,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,EAAE;gBACxE,qBAAO,GAAP,cAAY,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,EAAE;gBACzE,2BAAY,GAAZ,cAAiB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE;gBACzC,cAAC,cAAc,CAAC,GAAhB,cAAqB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE;gBACrC,mBAAK,GAAb,UAAc,GAAM,EAAE,MAAgB;oBAClC,IAAI,IAAI,CAAC,SAAS,KAAK,GAAG,EAAE;wBACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;qBAC/D;oBACD,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,MAAM,EAAE;wBAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;wBACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBAChC;oBACD,OAAO,IAAI,CAAC,WAAW,CAAC;iBAC3B;gBACL,UAAC;aAAA,IAAC;YAEF,gBAAsB,GAAM,EAAE,CAAI;gBAC9B,OAAO,GAAG,CAAC;aACd;YAED,kBAAwB,CAAI,EAAE,KAAQ;gBAClC,OAAO,KAAK,CAAC;aAChB;YAED,kBAAwB,GAAM,EAAE,KAAQ;gBACpC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAW,CAAC;aACjC;SACJ;;QAGD;YACI;gBAAO;oBACK,SAAI,GAAG,IAAI,IAAI,EAAY,CAAC;iBAWvC;gBAVG,sBAAI,qBAAI;yBAAR,cAAa,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;;;mBAAA;gBACrC,iBAAG,GAAH,UAAI,KAAQ,IAAa,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBACvD,iBAAG,GAAH,UAAI,KAAQ,IAAY,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE;gBACnE,oBAAM,GAAN,UAAO,KAAQ,IAAa,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC7D,mBAAK,GAAL,cAAgB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;gBACpC,kBAAI,GAAJ,cAAS,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE;gBACnC,oBAAM,GAAN,cAAW,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;gBACvC,qBAAO,GAAP,cAAY,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE;gBACzC,2BAAY,GAAZ,cAAiB,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE;gBACtC,cAAC,cAAc,CAAC,GAAhB,cAAqB,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE;gBAC9C,UAAC;aAAA,IAAC;SACL;;QAGD;YACI,IAAM,SAAS,GAAG,EAAE,CAAC;YACrB,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,EAAW,CAAC;YACvC,IAAM,OAAO,GAAG,eAAe,EAAE,CAAC;YAClC;gBAAO;oBACK,SAAI,GAAG,eAAe,EAAE,CAAC;iBAsBpC;gBArBG,qBAAG,GAAH,UAAI,MAAS;oBACT,IAAM,KAAK,GAAG,uBAAuB,CAAI,MAAM,aAAa,KAAK,CAAC,CAAC;oBACnE,OAAO,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;iBACtE;gBACD,qBAAG,GAAH,UAAI,MAAS;oBACT,IAAM,KAAK,GAAG,uBAAuB,CAAI,MAAM,aAAa,KAAK,CAAC,CAAC;oBACnE,OAAO,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;iBAC1E;gBACD,qBAAG,GAAH,UAAI,MAAS,EAAE,KAAQ;oBACnB,IAAM,KAAK,GAAG,uBAAuB,CAAI,MAAM,aAAa,IAAI,CAAC,CAAC;oBAClE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;oBACzB,OAAO,IAAI,CAAC;iBACf;gBACD,wBAAM,GAAN,UAAO,MAAS;oBACZ,IAAM,KAAK,GAAG,uBAAuB,CAAI,MAAM,aAAa,KAAK,CAAC,CAAC;oBACnE,OAAO,KAAK,KAAK,SAAS,GAAG,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;iBAChE;gBACD,uBAAK,GAAL;;oBAEI,IAAI,CAAC,IAAI,GAAG,eAAe,EAAE,CAAC;iBACjC;gBACL,cAAC;aAAA,IAAC;YAEF;gBACI,IAAI,GAAW,CAAC;gBAChB;oBAAG,GAAG,GAAG,aAAa,GAAG,UAAU,EAAE,CAAC;uBAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;gBAC/B,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;gBACjB,OAAO,GAAG,CAAC;aACd;YAID,iCAAoC,MAAS,EAAE,MAAe;gBAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE;oBAC/B,IAAI,CAAC,MAAM;wBAAE,OAAO,SAAS,CAAC;oBAC9B,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,EAAO,EAAE,CAAC,CAAC;iBAC5E;gBACD,OAAa,MAAO,CAAC,OAAO,CAAC,CAAC;aACjC;YAED,yBAAyB,MAAkB,EAAE,IAAY;gBACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC;oBAAE,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;gBACpE,OAAO,MAAM,CAAC;aACjB;YAED,wBAAwB,IAAY;gBAChC,IAAI,OAAO,UAAU,KAAK,UAAU,EAAE;oBAClC,IAAI,OAAO,MAAM,KAAK,WAAW;wBAAE,OAAO,MAAM,CAAC,eAAe,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAe,CAAC;oBACrG,IAAI,OAAO,QAAQ,KAAK,WAAW;wBAAE,OAAO,QAAQ,CAAC,eAAe,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAe,CAAC;oBACzG,OAAO,eAAe,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;iBACtD;gBACD,OAAO,eAAe,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;aACjD;YAED;gBACI,IAAM,IAAI,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;;gBAEvC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;gBAChC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;gBAChC,IAAI,MAAM,GAAG,EAAE,CAAC;gBAChB,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,SAAS,EAAE,EAAE,MAAM,EAAE;oBAC/C,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC1B,IAAI,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC;wBAAE,MAAM,IAAI,GAAG,CAAC;oBAChE,IAAI,IAAI,GAAG,EAAE;wBAAE,MAAM,IAAI,GAAG,CAAC;oBAC7B,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;iBAC7C;gBACD,OAAO,MAAM,CAAC;aACjB;SACJ;;QAGD,wBAA2B,GAAM;YACvB,GAAI,CAAC,EAAE,GAAG,SAAS,CAAC;YAC1B,OAAa,GAAI,CAAC,EAAE,CAAC;YACrB,OAAO,GAAG,CAAC;SACd;KACJ,CAAC,CAAC;CACN,EAlwDSD,SAAO,KAAPA,SAAO,QAkwDhB;;AC3wDD;;AAGA,gBAAuB,OAA0G;IAC/H,OAAO,UAAS,MAAW,EAAE,QAAgB;QAC3C,IAAI,MAAc,CAAC;QACnB,IAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAEtE,MAAM,CAAC,WAAW,CAAC,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,IAAI,EAAE,CAAC;;;;QAM9D,IAAI,QAAQ,EAAE;YACZ,MAAM,GAAG,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC/C;aAAM;YACL,MAAM,IAAI,oBAAoB,CAAC,QAAQ,CAAC,CAAC;SAC1C;QAED,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAC7B,IAAI,MAAM,CAAC;YACT,IAAI,EAAE,QAAQ;YACd,MAAM,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM;YAC7C,IAAI,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI;YAC7B,MAAM,EAAE,OAAO,IAAI,OAAO,CAAC,MAAM;YACjC,WAAW,EAAE,OAAO,IAAI,OAAO,CAAC,WAAW;YAC3C,KAAK,EAAE,OAAO,IAAI,OAAO,CAAC,KAAK;SAChC,CAAC,CACH,CAAA;KACF,CAAA;CACF;;;;;;;;;;;;;;;;;;;AAoBD,+BAAsC,UAAmB;IACvD,UAAU,GAAG,UAAU,IAAI,UAAU,CAAC,WAAW,EAAE,CAAC;IACpD,IAAI,MAAc,CAAC;IAEnB,IAAI,UAAU,KAAK,QAAQ,EAAE;QAC3B,MAAM,0BAAiB;KACxB;SAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;QAClC,MAAM,2BAAkB;KACzB;SAAM,IAAI,UAAU,KAAK,MAAM,EAAE;QAChC,MAAM,qBAAe;KACtB;SAAM;QACL,MAAM,IAAI,oBAAoB,CAAC,UAAU,CAAC,CAAC;KAC5C;IACD,OAAO,MAAM,CAAC;CACf;;ACtED;AACA,IAaY,MASX;AATD,WAAY,MAAM;IAChB,6BAAmB,CAAA;IACnB,uBAAa,CAAA;IACb,6BAAmB,CAAA;IACnB,4BAAkB,CAAA;IAClB,uBAAa,CAAA;IACb,0BAAgB,CAAA;IAChB,uBAAa,CAAA;IACb,uBAAa,CAAA;CACd,EATW,MAAM,KAAN,MAAM,QASjB;;;;"}
{"version":3,"file":"metaphasejs.umd.js","sources":["../src/orm/yago.logger.ts","../src/orm/database.ts","../src/orm/query.builder.ts","../src/orm/base.ts","../src/orm/exceptions.ts","../src/orm/model.ts","../src/orm/column.ts","../src/orm/collection.ts","../node_modules/reflect-metadata/Reflect.ts","../src/orm/decorators.ts","../src/metaphasejs.ts"],"sourcesContent":["// Debugging in the browser console can be controlled through a url query parameter in.\r\n// For example: http://localhost:3000?logger=true\r\n\r\n// Controls default logger behaviour.\r\n// Pass a 'false' value to avoid logger. This is the desired behaviour for production.\r\nconst DEFAULT_LOG_STATE: string = 'false';\r\n\r\n/**\r\n * Gets url query parameter form URL\r\n * @param {string} paramName\r\n * @returns {string}\r\n */\r\nexport const getUrlParameter = (paramName: string) => {\r\n  paramName = paramName.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n  const regex = new RegExp('[\\\\?&]' + paramName + '=([^&#]*)');\r\n  const results = regex.exec(location.search);\r\n  return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\r\n};\r\n\r\n/**\r\n * Update query string parameter\r\n * @param {string} uri\r\n * @param {string} key\r\n * @param {string} value\r\n * @return {string}\r\n */\r\nexport function updateQueryStringParameter(uri: string, key: string, value: string) {\r\n  const re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\r\n  const separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\r\n  if (uri.match(re)) {\r\n    return uri.replace(re, '$1' + key + \"=\" + value + '$2');\r\n  }\r\n  else {\r\n    return uri + separator + key + \"=\" + value;\r\n  }\r\n}\r\n\r\n// Variable that holds the looger state\r\nlet urlLogParam = getUrlParameter('logger');\r\nurlLogParam = urlLogParam || DEFAULT_LOG_STATE;\r\n\r\n/**\r\n * Disable console output messages (except error).\r\n * Used for production mode\r\n */\r\nexport function disableConsole(): void {\r\n  // console = console || {};\r\n  console.log = () => {};\r\n  console.table = () => {};\r\n  console.warn = () => {};\r\n}\r\n\r\nif (urlLogParam === 'false') {\r\n  disableConsole();\r\n}\r\n\r\n/**\r\n * Log message formats: foreground color, background color\r\n * CSS syntax is used to format messages\r\n * @type {Object}\r\n */\r\nexport const LOG_FORMAT = {\r\n  BLUE: 'background: ghostwhite; color: cornflowerblue; font-size: 12px; font-weight: bold',\r\n  ORANGE: 'color: orange',\r\n  BG_YELLOW: 'background-color: yellow'\r\n};\r\n\r\n/**\r\n * Logs sql query strings and query results, appling two formats:\r\n * Input (query): blue colors\r\n * Output (result): yellow colors\r\n * @param {string} msg\r\n * @param {\"query\" | \"result\" | string} format\r\n */\r\nexport function logQuery(msg: string, format: 'query' | 'result' | string): void {\r\n  if (format === 'query') {\r\n    const format = LOG_FORMAT.BLUE;\r\n    console.log(`%c${msg}`, format);\r\n  } else\r\n  if (format === 'result') {\r\n    const format = LOG_FORMAT.ORANGE;\r\n    console.log(`%câœ… ${msg}`, format);\r\n  } else {\r\n    console.log(`%c${msg}`, format)\r\n  }\r\n}\r\n\r\n/**\r\n * General Fn to apply format to a log message\r\n * @param {string} msg\r\n * @param {string} format\r\n */\r\nexport function log(msg: string, format: string): void {\r\n  console.log(`%c${msg}`, format);\r\n}\r\n\r\n/* Using a global variable: ********************************** */\r\n\r\n// interface window {\r\n//   DEBUG: boolean;\r\n// }\r\n//\r\n// export const setDebugLevel = (flag: boolean = true): void => {\r\n//   (window as any).DEBUG = flag;\r\n// };\r\n\r\n/* Get query string parameters for modern browsers. Doesnt work with Jest. A shim is needed */\r\n// const urlParams = new URLSearchParams(window.location.search);\r\n// let urlLogParam = urlParams.get('log');\r\n","//todo: usar whatg-fetch en lugar de fetch para compatibilidad navegador\r\nconst sql = require('sql.js');\r\nimport {QueryBuilder} from 'knex';\r\nimport {logQuery} from './yago.logger';\r\nconst FileSaver = require('file-saver');\r\n\r\ndeclare const SQL: any;\r\n\r\n//todo: falta completar definicion de tipos para clase Statement y documentar cada metodo\r\n/** **************************************************************************************************************\r\n * db.js API\r\n * Documentation:\r\n * http://kripken.github.io/sql.js/documentation/#http://kripken.github.io/sql.js/documentation/class/Database.html\r\n **************************************************************************************************************** */\r\nexport interface db {\r\n\r\n  /**\r\n   * Open a new database either by creating a new one or opening an existing one,\r\n   * stored in the byte array passed in first argument\r\n   * @param {number[]} data\r\n   */\r\n  constructor(data: number[]): void;\r\n\r\n  /**\r\n   * Set DB created from external file\r\n   * @param {db} database\r\n   */\r\n  setDatabase(database: db): void;\r\n\r\n  /**\r\n   * Runs a database query that can be created by the query builder or by a sql query string.\r\n   * It does not return a list of results. It returns a \"db\" database object for fn chaining\r\n   * It wraps db.run()\r\n   * @param {Object | string} query\r\n   */\r\n  runQuery(query: QueryBuilder | string): any;\r\n\r\n  /**\r\n   * Execute a query against database and returns an array of objects\r\n   * It wraps db.exec()\r\n   * @param {QueryBuilder} query object\r\n   * @returns {Object[]} List of models\r\n   */\r\n  execQuery(query: QueryBuilder | string): Object[];\r\n\r\n  /**\r\n   * Get the results from a query and transform them into a list of POJOs\r\n   * @param statement Prepared SQL statement\r\n   * @returns {Object[]}\r\n   */\r\n  getResults(statement: any): Object[];\r\n\r\n  /**\r\n   * Check whether a table exists in the database\r\n   * @param {string} tableName\r\n   * @returns {boolean}\r\n   */\r\n  hasTable(tableName: string): boolean;\r\n\r\n  /**\r\n   * Check databse integrity (for posible errors and corruption)\r\n   * @returns {Object[]} with integrity info\r\n   */\r\n  integrityCheck(): Object[];\r\n\r\n  /**\r\n   * Get DDL (Data Definition Language) queries\r\n   * Useful for debugging purposes\r\n   * @return {Object[]}\r\n   */\r\n  getSchema(): Object[];\r\n\r\n  /**\r\n   * Execute SQLite function\r\n   * @param {string} fnExpression\r\n   * @returns {any}\r\n   */\r\n  execFunction(fnExpression: string): any;\r\n\r\n  /**\r\n   * Get id of last record inserted in database\r\n   * @return {number}\r\n   */\r\n  getIdLastRecordInserted(): number;\r\n\r\n  run(sqlQuery: string, params?: object | any[]): db;\r\n  exec(sqlQuery: string): Array<{columns: string[], values: any[]}>;\r\n  prepare(sqlQuery: string, params?: object | any[]): Object;\r\n  each(sqlQuery: string, callback: Function, done: Function, params?: object | any[]): db;\r\n  export(): Uint8Array;\r\n  close(): void;\r\n  getRowsModified(): number;\r\n  create_function(name: string, fn: Function): void;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Database instance\r\n * @type {SQL} Global variable created by 'sql.js'\r\n */\r\nexport let db = new sql.Database();\r\n\r\ndb.__proto__.setDatabase = (database: any) => {\r\n  db = database;\r\n};\r\n\r\ndb.__proto__.runQuery = (query: QueryBuilder | string): any => {\r\n  const queryString = query.toString();\r\n  logQuery(queryString, 'query');\r\n  return db.run(queryString);\r\n};\r\n\r\ndb.__proto__.execQuery = (query: QueryBuilder | string): Object[] => {\r\n  logQuery(query.toString(), 'query');\r\n  return db.getResults( db.prepare(query.toString()) );\r\n};\r\n\r\ndb.__proto__.getResults = (statement: any): Object[] => {\r\n  let result: any[] = [];\r\n  while (statement.step()){\r\n    result.push(statement.getAsObject());\r\n  }\r\n  statement.free();\r\n  return result;\r\n};\r\n\r\ndb.__proto__.hasTable = (tableName: string): boolean => {\r\n  const result = db.exec( `SELECT name FROM sqlite_master WHERE type='table' AND name='${tableName}'` );\r\n  return result && result.length > 0\r\n};\r\n\r\ndb.__proto__.execFunction = (fnExpression: string) => {\r\n  const stmt = db.prepare(fnExpression);\r\n  const result = db.getResults(stmt);\r\n  stmt.free();\r\n  return result;\r\n};\r\n\r\ndb.__proto__.integrityCheck = (): Object[] => {\r\n  return db.execFunction('PRAGMA integrity_check')\r\n};\r\n\r\ndb.__proto__.getSchema = () => {\r\n  return db.execQuery('SELECT \"name\", \"sql\" FROM \"sqlite_master\" WHERE type=\"table\"');\r\n};\r\n\r\ndb.__proto__.getIdLastRecordInserted = (): number => {\r\n  const result = db.execFunction('select last_insert_rowid()');\r\n  return result && result[0]['last_insert_rowid()'];\r\n};\r\n\r\nexport const loadDbFromFile = (fileNamePath: string, actionFn: Function): void => {\r\n  fetch(fileNamePath)\r\n    .then((response: any) => {\r\n      if (response) {\r\n        return response.arrayBuffer();\r\n      }\r\n    }).then((arrayBuffer: any) => {\r\n    if (arrayBuffer) {\r\n      const dbFile = new Uint8Array(arrayBuffer);\r\n      const dbInstance = new SQL.Database(dbFile);\r\n      db.setDatabase(dbInstance);\r\n      try {\r\n        db.integrityCheck();\r\n      } catch (exception) {\r\n        alert(`Database file not found: \"${fileNamePath}\"`);\r\n      }\r\n      console.clear();\r\n      const logFormat = 'background: cornflowerblue; color: white; font-weight: ';\r\n      console.log(`%c Database loaded from file \"${fileNamePath}\" `, logFormat);\r\n      db.execQuery('PRAGMA foreign_keys=ON;');\r\n      actionFn();\r\n    }\r\n  })\r\n  .catch((error: Error) => {\r\n    console.error(error);\r\n    alert('Failed to fetch database file');\r\n  })\r\n};\r\n\r\nexport const saveDbToFile = (fileNamePath: string) => {\r\n  try {\r\n    const isFileSaverSupported = !!new Blob;\r\n    const uint8Array = db.export();\r\n    const buffer = new Buffer(uint8Array);\r\n    const file = new File([buffer], fileNamePath, {type: 'application/octet-stream'});\r\n    FileSaver.saveAs(file);\r\n  } catch (exception) {\r\n    alert('Save file to disk not supported by browser');\r\n    console.error(exception);\r\n  }\r\n};\r\n\r\nconsole.clear();\r\n\r\n","const knex = require('knex');\r\nimport {db} from \"./database\";\r\n\r\n\r\nlet queryBuilder: any;\r\n\r\nif (process.env.NODE_ENV !== 'test') {\r\n  /**\r\n   * Query-Builder: creates sql query strings using functions\r\n   * @type {Knex}\r\n   */\r\n  queryBuilder = knex({\r\n    client: 'sqlite',\r\n    connection: {filename: ':memory:'},\r\n    useNullAsDefault: true,\r\n    database : 'metaphase_db'\r\n  });\r\n}\r\n\r\nif (process.env.NODE_ENV === 'test') {\r\n  const mockKnex = require('mock-knex');\r\n  /**\r\n   * Mocked query-builder for tests\r\n   * @type {Knex}\r\n   */\r\n  queryBuilder = knex({\r\n    client: 'sqlite',\r\n    debug: false,\r\n    useNullAsDefault: true,\r\n    database: 'test_db'\r\n  });\r\n  mockKnex.mock(queryBuilder);\r\n}\r\n\r\n//todo: testar la funcion run() y getOne()\r\n//todo: emitir un evento personalizado para saber cuando se ha ejecutado una consulta\r\n//todo: renombrar getOne() a getFirst()\r\n\r\n/**\r\n * Execute database query using query-builder\r\n * Do not use arrow function because \"this\" type is incorrectly infered by typescript\r\n * @return {Object[]} list with query results\r\n */\r\nqueryBuilder().__proto__.run = function() {\r\n  return db.execQuery(this);\r\n};\r\n\r\n/**\r\n * Execute database query using query-builder and return only first row\r\n * @return {Object} query result\r\n */\r\nqueryBuilder().__proto__.getOne = function() {\r\n  return db.execQuery(this)[0];\r\n};\r\n\r\nexport {queryBuilder as query};\r\n","import {db} from \"./database\";\r\nimport {Model} from \"./model\";\r\nimport {query} from \"./query.builder\";\r\nimport {logQuery} from \"./yago.logger\";\r\n\r\n\r\nexport abstract class Base {\r\n\r\n  protected model: Model;\r\n\r\n  public tableName(): string {\r\n    let name;\r\n    if(this.model) {\r\n      name = this.model.name;\r\n    } else {\r\n      name = this.constructor.name;\r\n    }\r\n    return name.toLowerCase() + 's';\r\n  }\r\n\r\n  protected insert(model?: any): number | string {\r\n    model = model || this;\r\n    query.insert(model).into(this.tableName()).run();\r\n    model.id = db.getIdLastRecordInserted();\r\n    return model.id;\r\n  }\r\n\r\n  protected update(model?: any): number | string {\r\n    query.table(this.tableName()).update(model).where('id', model.id).run();\r\n    return model.id;\r\n  }\r\n\r\n  public save(model?: any): number | string {\r\n    model = model || this;\r\n    let idModelSaved: number | string;\r\n    if (model.isSaved()) {\r\n      idModelSaved = this.update(model);\r\n    } else {\r\n      idModelSaved = this.insert(model);\r\n    }\r\n    (idModelSaved > 0) && logQuery(`Saved ${model.constructor.name} with id: ${idModelSaved}`, 'result');\r\n    return idModelSaved;\r\n  }\r\n\r\n  public remove(model?: any): number {\r\n    model = model || this;\r\n    const deleteQuery = `delete from ${this.tableName()} where id=${model.id}`;\r\n    db.run(deleteQuery);\r\n    logQuery(deleteQuery, 'query');\r\n    logQuery(`Deleted ${this.constructor.name} with id: ${model.id}`, 'result');\r\n    return model.id;\r\n  }\r\n\r\n}\r\n","import {Model} from \"./model\";\r\n\r\nexport class NotSavedModelError extends Error {\r\n\r\n  constructor(public model: Model, public relatedModel: Model) {\r\n    super();\r\n    let relatedModelName: string;\r\n    if (relatedModel.constructor.name === \"Function\") {\r\n      relatedModelName = relatedModel.prototype.constructor.name;\r\n    } else {\r\n      relatedModelName = relatedModel.constructor.name;\r\n    }\r\n    const msg = `(${model.constructor.name}) = ${JSON.stringify(model)}` +\r\n      ` must be saved to establish a relation with (${relatedModelName})`;\r\n    throw new Error(msg);\r\n  }\r\n}\r\n\r\nexport class InvalidPropTypeError extends Error {\r\n  constructor(jsType?: string) {\r\n    super();\r\n    const msg = `Invalid model property type: \"${jsType}\". Allowed values: [\"string, number\"]`;\r\n    throw new Error(msg);\r\n  }\r\n}\r\n\r\nexport class InvalidColumnData extends Error {\r\n  constructor(columnData: string | undefined) {\r\n    super();\r\n    const msg = `Invalid column data value: \"${columnData}\"`;\r\n    throw new Error(msg);\r\n  }\r\n}","import {Base} from \"./base\";\r\nimport {query} from \"./query.builder\";\r\nimport {NotSavedModelError} from \"./exceptions\";\r\n\r\n\r\nexport abstract class Model extends Base {\r\n\r\n  [otherProps: string]: any;\r\n\r\n  constructor(props?: Model | {}) {\r\n    super();\r\n    Object.assign(this, props);\r\n  }\r\n\r\n  /**\r\n   * Factory for model instance creation\r\n   * @param {Object} pojo (plain old javascript object)\r\n   * @param {any} modelClass\r\n   * @returns {Model}\r\n   */\r\n  public static create(pojo: Object, modelClass: any): Model {\r\n    return new modelClass(pojo);\r\n  }\r\n\r\n  public isSaved(): boolean {\r\n    return this.id !== undefined;\r\n  }\r\n\r\n  private getForeignKeyColumnName(): string {\r\n    return this.constructor.name.toLowerCase() + '_id';\r\n  }\r\n\r\n  //todo: parametro para opcion escribir el modelo en la tabla de la bd {save: true}\r\n  public belongsTo(model: Model): Model {\r\n    if ( !model.isSaved ) {\r\n      throw new Error('Invalid model instance: ' + model);\r\n    }\r\n    if( !model.isSaved() ) {\r\n      throw new NotSavedModelError(model, this);\r\n    }\r\n    const foreignColumnName = model.getForeignKeyColumnName();\r\n    this[foreignColumnName] = model.id;\r\n    return this;\r\n  }\r\n\r\n  //todo: esto corresponde a la direccion inversa de una relacion. Igual se podria implementar como un decorator\r\n  //igual que getChildren(). el decorador tendria que crear la fn hasMany() y getParent() o getChildren()\r\n  //dependiendo de lado de la relacion (consultar typeorm para ver como lo hace)\r\n  public getParent(model: any & Model): Model[] {\r\n    if( !this.isSaved() ) {\r\n      throw new NotSavedModelError(this, model);\r\n    }\r\n    const relatedTable = model.prototype.tableName();\r\n    const fkColumnName = model.prototype.getForeignKeyColumnName();\r\n    const idColValue = this[fkColumnName];\r\n    const relatedModels: Model[] = query(relatedTable).where('id', idColValue).run();\r\n    return relatedModels.map( obj => Model.create(obj, model) );\r\n  }\r\n\r\n  //todo: intentar crear dinamicamente esta funcion como \"posts()\" por ejemplo\r\n  /**\r\n   * Get first level related children models\r\n   * @param model\r\n   * @returns {Model[]}\r\n   */\r\n  public getChildren(model: any & Model): Model[] {\r\n    if( !this.isSaved() ) {\r\n      throw new NotSavedModelError(this, model);\r\n    }\r\n    const childTable = model.prototype.tableName();\r\n    const fkColumnChildTable = this.getForeignKeyColumnName();\r\n    try {\r\n      const relatedModels: Model[] = query(childTable).where(fkColumnChildTable, this.id).run();\r\n      return relatedModels.map( obj => Model.create(obj, model) );\r\n    } catch(exception) {\r\n      console.error(`Model ${JSON.stringify(this)} has no children of type \"${model.name}\"`);\r\n      console.error(exception);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get recursively all descendant models from this model\r\n   */\r\n  public getChildrenAll(): void {\r\n    if (this.hasMany) {\r\n      const childClasses = this.hasMany();\r\n      for (let i = 0; i < childClasses.length; i++ ) {\r\n        const childModels = this.getChildren(childClasses[i]);\r\n        const newPropName = childClasses[i].prototype.tableName();\r\n        this[newPropName] = [];\r\n        for (let j = 0; j < childModels.length; j++ ) {\r\n          this[newPropName].push(childModels[j]);\r\n          childModels[j].getChildrenAll(); // recursive call\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //todo: testar esta fn\r\n  /**\r\n   * Makes related models properties not enumerable\r\n   * Use: if a model is fetched with all related (or children) models\r\n   * when this model is saved an error is thrown due to properties containing related models\r\n   * are not original model properties\r\n   * This function can be used to \"hide\" (not enumerate) these props and save the model\r\n   * @param {Model} model\r\n   * returns {Model}\r\n   */\r\n  public static omitChildrenProps(model: any): Model {\r\n    model.hasChildren() && model.hasMany().forEach((relatedModel: Model) => {\r\n      try {\r\n        Object.defineProperty(model, relatedModel.prototype.tableName(), {enumerable: false});\r\n      } catch(exception) {\r\n        console.error(exception);\r\n        alert(exception)\r\n      }\r\n    });\r\n    return model;\r\n  }\r\n\r\n  public hasChildren(): boolean {\r\n    return this.hasMany !== undefined;\r\n  }\r\n\r\n\r\n  // private isChildModel(): boolean {\r\n  //   const columns: Column[] = this.__proto__.constructor.columns;\r\n  //   let result = false;\r\n  //   for (let i = 0; i < columns.length; i++) {\r\n  //     if ( columns[i].isForeignKey() ) {\r\n  //       result = true;\r\n  //       break;\r\n  //     }\r\n  //   }\r\n  //   return result;\r\n  // }\r\n  //\r\n\r\n//   public existsTableInDB(): boolean {\r\n//     const rows = db.exec( query.schema.hasTable(this.tableName()).toString() );\r\n//     return rows && rows.length > 0\r\n//   }\r\n\r\n  // public existsInTable() {\r\n  //   return db.execQuery(`select * from ${this.tableName()} where id=${this.id}`);\r\n  // }\r\n\r\n  // private hasTableColumn(model: Model, columnName: string): boolean {\r\n  //   const columns = model.columns;\r\n  //   const columnNames: string[] = columns.map((column: Column) => {\r\n  //     return column.name;\r\n  //   });\r\n  //   return columnNames.indexOf(columnName) > -1;\r\n  // }\r\n\r\n\r\n\r\n  // public setRelated(model: Model): number | string {\r\n  //   let foreignId: number | string;\r\n  //   try {\r\n  //     if(this.id) {\r\n  //       foreignId = this.id;\r\n  //     } else {\r\n  //       foreignId = this.save();\r\n  //     }\r\n  //     const foreignColumnName = this.getForeignKeyColumnName();\r\n  //     model[foreignColumnName] = foreignId;\r\n  //     return model.save();\r\n  //   } catch(error) {\r\n  //     console.log(error);\r\n  //     return -1;\r\n  //   }\r\n  // }\r\n\r\n}\r\n\r\n\r\n","//todo: funcionamiento para tipo de columna boolean. Poder usar \"true/false\"\r\n//todo: poder obtener una columna de la tabla de un modelo y hacerla nullable (para los casos en que\r\n// se quiera hacer la columna fk nullable\r\n//todo: hacer configurable politica de acciones: cascade, set null, etc.\r\n\r\nimport { DBtype } from './types'\r\nimport { TableBuilder } from 'knex'\r\nimport { InvalidColumnData } from './exceptions'\r\n\r\nexport const enum ColumnAction {\r\n  Cascade = 'cascade',\r\n  SetNull = 'set null',\r\n  SetDefault = 'set default',\r\n  Restrict = 'restrict',\r\n  NoAction = 'no action'\r\n}\r\n\r\nexport interface IColumn {\r\n  name?: string\r\n  dbType?: DBtype | any\r\n  size?: number\r\n  foreignKey?: boolean\r\n  relatedTable?: string\r\n  unique?: boolean\r\n  defaultValue?: any\r\n  notNullable?: boolean\r\n  index?: boolean\r\n}\r\n\r\nexport class Column implements IColumn {\r\n  name?: string;\r\n  dbType?: DBtype;\r\n  size?: number;\r\n  foreignKey?: boolean;\r\n  relatedTable?: string;\r\n  unique?: boolean;\r\n  defaultValue?: any;\r\n  notNullable?: boolean;\r\n  index?: boolean;\r\n\r\n  //todo: sqlite no soporta default values (solo null) eliminar la opcion \"defaultValue\"\r\n  //`sqlite` does not support inserting default values. Specify values explicitly or use the `useNullAsDefault`\r\n  // config flag. (see docs http://knexjs.org/#Builder-insert).\r\n\r\n  constructor({\r\n    name,\r\n    size,\r\n    dbType,\r\n    foreignKey,\r\n    relatedTable,\r\n    unique,\r\n    defaultValue,\r\n    notNullable,\r\n    index\r\n  }: IColumn) {\r\n    this.name = name;\r\n    this.dbType = dbType;\r\n    this.foreignKey = foreignKey;\r\n    this.relatedTable = relatedTable;\r\n    this.unique = unique;\r\n    this.defaultValue = defaultValue;\r\n    this.size = size;\r\n    this.notNullable = notNullable;\r\n    this.index = index;\r\n  }\r\n\r\n  /**\r\n   * Creates foreign key relation between two columns in two tables\r\n   * Column 1: primary key column ('id')\r\n   * Column 2: foreign key column (<modelName>_id)\r\n   * Table 1: table\r\n   * Table 2: this.relatedTable\r\n   * Note: ColumnAction = 'Cascade' by default. Not configurable by now\r\n   * @param {knex.TableBuilder} table\r\n   */\r\n  public createColumnsRelation(table: TableBuilder) {\r\n    if (!this.name) {\r\n      throw new InvalidColumnData(this.name);\r\n    }\r\n\r\n    if (!this.relatedTable) {\r\n      throw new InvalidColumnData(this.relatedTable);\r\n    }\r\n\r\n    table\r\n      .foreign(this.name)\r\n      .references('id')\r\n      .inTable(this.relatedTable)\r\n      .onDelete(ColumnAction.Cascade)\r\n      .onUpdate(ColumnAction.Cascade)\r\n  }\r\n\r\n  /**\r\n   * Create table columns based in column properties\r\n   * @param {Knex.TableBuilder} table\r\n   */\r\n  public createColumn(table: TableBuilder) {\r\n    let newColumn;\r\n    const colType = this.dbType;\r\n    const colName = this.name;\r\n    const colSize = this.size;\r\n\r\n    this.size && console.warn('Size option exists for compatibility. It has no real effect');\r\n\r\n    if (!colType || !colName) {\r\n      throw new InvalidColumnData(colType || colName);\r\n    }\r\n    if (this.foreignKey) {\r\n      this.createColumnsRelation(table);\r\n    }\r\n    if (this.notNullable) {\r\n      newColumn = table[colType](colName).notNullable();\r\n    }\r\n    if (this.unique) {\r\n      newColumn = Column.addUniqueConstraint(newColumn, table, colType, colName);\r\n    }\r\n    if (this.index) {\r\n      newColumn = Column.addIndex(newColumn, table, colType, colName);\r\n    }\r\n    return newColumn || table[colType](colName, colSize);\r\n  }\r\n\r\n  private static addUniqueConstraint(\r\n    newColumn: any,\r\n    tableBuilder: TableBuilder,\r\n    colType: DBtype,\r\n    colName: string\r\n  ): TableBuilder {\r\n    if (newColumn) {\r\n      return newColumn.unique();\r\n    } else {\r\n      return tableBuilder[colType](colName).unique();\r\n    }\r\n  }\r\n\r\n  private static addIndex(\r\n    newColumn: any,\r\n    tableBuilder: TableBuilder,\r\n    colType: DBtype,\r\n    colName: string\r\n  ): TableBuilder {\r\n    if (newColumn) {\r\n      return newColumn.index();\r\n    } else {\r\n      return tableBuilder[colType](colName).index();\r\n    }\r\n  }\r\n\r\n  public isForeignKey(): boolean {\r\n    return Boolean(this.foreignKey);\r\n  }\r\n}\r\n","//todo: poder ejecutar consulta sql que conste de varias sentencias en varias lineas\r\n//todo: quitar el plural de las tablas = tableName();\r\n//todo: hacer fn para paginacion. params: limit (rows per page), offset: (num. pag)\r\n//getAllPaginated(pagNum, recordNum)\r\n//todo: probar en edge y explorer\r\n//todo: hacer mutators transaccionales o averiguar si por defecto sqlite hace las operaciones transaccionales\r\n//todo: no usar cadena literal para nombre de columna 'id'\r\n//todo: faltan relaciones \"one to one\" y \"many to many\"\r\n//todo: documentar funciones\r\n//todo: fn borrar tabla\r\n//todo: implementar logger usando decorators\r\nimport {db} from \"./database\";\r\nimport {query} from \"./query.builder\";\r\nimport {Column} from \"./column\";\r\nimport {Base} from \"./base\";\r\nimport {Model} from \"./model\";\r\nimport {TableBuilder} from \"knex\";\r\nimport {DBtype} from \"./types\";\r\n\r\n\r\n/**\r\n * Manages a collection of models (rows in a db table)\r\n * It follows Repository pattern\r\n */\r\nexport class Collection extends Base {\r\n\r\n  constructor(protected model: any) {\r\n    super();\r\n    if (this.hasRelations()) {\r\n      this.createRelations();\r\n    }\r\n    this.createTable(this.tableName(), model.columns);\r\n  }\r\n\r\n  private createTable(tableName: string, columns: Column[]): void {\r\n    const createTableQuery = query.schema.raw('PRAGMA foreign_keys=ON')\r\n      .dropTableIfExists(tableName).createTable(\r\n      tableName, (tableBuilder: TableBuilder) => {\r\n        this.createColumns(columns, tableBuilder)\r\n      });\r\n    db.runQuery(createTableQuery);\r\n  }\r\n\r\n  //todo: hacer static\r\n  private createColumns(columns: Column[], tableBuilder: TableBuilder): void {\r\n    tableBuilder.increments('id');\r\n    for (let i in columns) {\r\n      columns[i].createColumn(tableBuilder);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Given an array of pojos it returns an array of model instances\r\n   * @param {Object[]} pojos (Plain Old Javascript Object)\r\n   * @returns {Object[]}\r\n   */\r\n  public createModelInstances(pojos: Object[]): Model[] {\r\n    for (let i = 0; i < pojos.length; i++) {\r\n      pojos[i] = Model.create(pojos[i], this.model);\r\n    }\r\n    return pojos as Model[];\r\n  }\r\n\r\n  public getAll( load: {children: boolean} = {children: false} ): Model[] {\r\n    const result = db.execQuery(`select * from ${this.tableName()}`);\r\n    const models: Model[] = this.createModelInstances(result);\r\n    console.table(result);\r\n    if (load.children) {\r\n      models.forEach( (model: Model) => model.getChildrenAll() );\r\n      return models;\r\n    } else {\r\n      return this.createModelInstances(result);\r\n    }\r\n  }\r\n\r\n  public getById( id: string | number, load: {children: boolean} = {children: false} ): Model {\r\n    const result = db.execQuery(`select * from ${this.tableName()} where id=${id}`)[0];\r\n    const model = new this.model(result);\r\n    console.log(model);\r\n    if (load.children) {\r\n      model.getChildrenAll();\r\n    }\r\n    return model;\r\n  }\r\n\r\n  public getByFilter(filter: Object,\r\n                     columns: string[]=[],\r\n                     load: {children: boolean} = {children: false} ): Model[] {\r\n\r\n    const result = query.select(columns).from(this.tableName()).where(filter).run();\r\n    console.table(result);\r\n    if (load.children) {\r\n      const models: Model[] = this.createModelInstances(result);\r\n      models.forEach( (model: Model) => model.getChildrenAll() );\r\n      return models;\r\n    } else {\r\n      return this.createModelInstances(result);\r\n    }\r\n  }\r\n\r\n  public getByOperator(termA: any,\r\n                       operator: string,\r\n                       termB: any,\r\n                       columns: string[] = [],\r\n                       load: {children: boolean} = {children: false}): Model[] {\r\n\r\n    const result = query.select(columns).from(this.tableName()).where(termA, operator, termB).run();\r\n    console.table(result);\r\n    if (load.children) {\r\n      const models: Model[] = this.createModelInstances(result);\r\n      models.forEach( (model: Model) => model.getChildrenAll() );\r\n      return models;\r\n    } else {\r\n      return this.createModelInstances(result);\r\n    }\r\n  }\r\n\r\n  private hasRelations(): boolean {\r\n    return this.model.prototype.hasMany\r\n  }\r\n\r\n  private createColumnRelation(index: number): void {\r\n    const model = this.model;\r\n    const relatedModel = model.prototype.hasMany()[index];\r\n    const newColumnRelation = new Column({\r\n      name: model.name.toLowerCase() + '_id',\r\n      dbType: DBtype.INTEGER,\r\n      foreignKey: true,\r\n      relatedTable: model.name.toLowerCase() + 's',\r\n      notNullable: true\r\n    });\r\n    const logFormat = 'color: grey; border-color: lightgrey; border-style: solid; border-width: 1px; ' +\r\n      'border-radius: 2px; padding: 2px; background-color: #f0f0f5';\r\n    console.log(`%c âš¿ Foreign-key column created in table ${relatedModel.prototype.tableName()}: `, logFormat);\r\n    console.log(newColumnRelation);\r\n    const relatedModelColumns = relatedModel.prototype.constructor.columns;\r\n    relatedModelColumns.push(newColumnRelation);\r\n  }\r\n\r\n  private createRelations(): void {\r\n    const relationsList: Model[] = this.model.prototype.hasMany();\r\n    for(let index = 0; index < relationsList.length; index++) {\r\n      this.createColumnRelation(index);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get table structure and metadata for a model\r\n   * @param modelClass\r\n   * @returns {Object[]} Column metadata\r\n   */\r\n  public static getTableSchema(modelClass: any): Object[] {\r\n    return db.execQuery( `PRAGMA table_info(${modelClass.prototype.tableName()})` );\r\n  }\r\n\r\n  /**\r\n   * Get Knex query-builder for this collection/table\r\n   * @returns {any}\r\n   */\r\n  public query(): any {\r\n    return query(this.tableName());\r\n  }\r\n\r\n  /**\r\n   * Returns table schema with column metadata\r\n   * @param {string} tableName\r\n   * @param {string} columnName\r\n   * @returns {boolean}\r\n   */\r\n  public static hasColumn(tableName: string, columnName: string): boolean {\r\n    const results = db.exec(`SELECT COUNT(*) AS MATCHED_COLUMNS \r\n      FROM pragma_table_info('${tableName}') WHERE name='${columnName}'`);\r\n    return results[0].values[0][0] > 0;\r\n  }\r\n\r\n  /**\r\n   * For posible future use\r\n   * Deletes the table corresponding to the collection\r\n   * @param {\"string\"} tableName\r\n   */\r\n  public static deleteTable(tableName: string): void {\r\n    db.runQuery( query.schema.dropTableIfExists(tableName) );\r\n  }\r\n\r\n}",{"errno":-4058,"code":"ENOENT","syscall":"open","path":"C:\\Users\\yagol\\Documents\\projects\\metaphasejs\\node_modules\\reflect-metadata\\Reflect.ts"},"import 'reflect-metadata'\r\nimport { Column } from './column'\r\nimport { DBtype } from './types'\r\nimport { InvalidPropTypeError } from './exceptions'\r\n\r\n//todo: (revisar) usando solo como tipo DBtype no compila usando el decorador @columna({dbType: DBtype.TEXT)\r\n//Se une al tipo DBtype el tipo any como solucion temporal\r\n\r\nexport function column(colData?: {\r\n  dbType?: DBtype | any,\r\n  size?: number,\r\n  unique?: boolean,\r\n  notNullable?: boolean,\r\n  index?: boolean\r\n}) {\r\n  return function(target: any, propName: string) {\r\n    let dbType: DBtype;\r\n    const propType = Reflect.getMetadata('design:type', target, propName);\r\n\r\n    target.constructor.columns = target.constructor.columns || [];\r\n\r\n    //todo: de la misma forma que se aÃ±ade una propiedad \"columns\" al constructor del modelo\r\n    //se podria aÃ±adir una funcion \"hasMany()\" usando un decorator para definir relaciones entre modelos\r\n    //Por ejemplo @hasMany()Post podria generar target.constructor.hasMany([Post])\r\n\r\n    if (propType) {\r\n      dbType = getDBTypeFromPropType(propType.name);\r\n    } else {\r\n      throw new InvalidPropTypeError(propType);\r\n    }\r\n\r\n    target.constructor.columns.push(\r\n      new Column({\r\n        name: propName,\r\n        dbType: (colData && colData.dbType) || dbType,\r\n        size: colData && colData.size,\r\n        unique: colData && colData.unique,\r\n        notNullable: colData && colData.notNullable,\r\n        index: colData && colData.index\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Calculate SQLite type from javascript model prop type.\r\n *\r\n * Type correspondence:\r\n * ---------------------------------\r\n * Javascript type\t  SQLite type\r\n * ---------------------------------\r\n * number\t            REAL, INTEGER\r\n * boolean            INTEGER\r\n * string\t            TEXT\r\n * Array              Uint8Array BLOB\r\n * null\t              NULL\r\n * ----------------------------------\r\n * Ref.: https://www.sqlite.org/datatype3.html\r\n *\r\n * @param jsPropType JavaScript type\r\n * @return DBtype SQLite type\r\n */\r\nexport function getDBTypeFromPropType(jsPropType?: string): DBtype {\r\n  jsPropType = jsPropType && jsPropType.toLowerCase();\r\n  let result: DBtype;\r\n\r\n  if (jsPropType === 'string') {\r\n    result = DBtype.STRING;\r\n  } else if (jsPropType === 'number') {\r\n    result = DBtype.INTEGER;\r\n  } else if (jsPropType === 'null') {\r\n    result = DBtype.NULL;\r\n  } else {\r\n    throw new InvalidPropTypeError(jsPropType);\r\n  }\r\n  return result;\r\n}","//todo: review test config to avoid dupes\r\n//todo: comentar funciones para que aparezcan en api doc\r\n// Import here Polyfills if needed. Recommended core-js (npm i -D core-js)\r\n// import \"core-js/fn/array.find\"\r\nexport * from './orm/database'\r\nexport * from './orm/model'\r\nexport * from './orm/collection'\r\nexport * from './orm/column'\r\nexport * from './orm/decorators'\r\nexport * from './orm/exceptions'\r\nexport * from './orm/query.builder'\r\nexport * from './orm/types'\r\nexport * from './orm/yago.logger'\r\n\r\n//todo: DBtype deberia estar en un fichero raiz metaphasejs.d.ts para ser accesible al exterior\r\n"],"names":["db","queryBuilder","query","tslib_1.__extends","Reflect","global"],"mappings":"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"}